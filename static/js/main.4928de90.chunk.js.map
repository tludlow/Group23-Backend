{"version":3,"sources":["containers/App.js","containers/Main.js","api.js","containers/Home/CurrencyLineDepreciation.js","containers/Home/CurrencyLineAppreciation.js","containers/Home/ActionsDonut.js","containers/Trading/Action.js","containers/Trading/Trade.js","containers/Trading/Trading.js","containers/Reports/PDFDocument.js","reducers/index.js","store.js","localStorage.js","index.js","containers/Home/Home.js","containers/Trading/TradingAll.js","containers/Trading/Forms/CreateTrade.js","containers/Trading/Forms/EditTrade.js","containers/Trading/Forms/DeleteTrade.js","containers/Trading/Forms/FindTrade.js","containers/Trade/Trade.js","containers/Reports/Reports.js","containers/Reports/Report.js","containers/Corrections/Corrections.js","containers/FourOFour.js"],"names":["App","connect","state","dispatch","bindActionCreators","actionCreators","props","_useState","useState","_useState2","Object","slicedToArray","isOpen","setIsOpen","react_default","a","createElement","className","onClick","browserHistory","push","type","viewBox","fillRule","d","concat","react_router_es","to","React","cloneElement","children","config","baseURL","timeout","headers","Content-Type","instance","axios","create","CurrencyLineDepreciation","lineData","labels","day_one","day_two","day_three","day_four","day_five","day_six","day_seven","datasets","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","values","react_chartjs_2_es","width","height","options","legend","display","scales","xAxes","gridLines","color","ticks","yAxes","callback","value","index","length","CurrencyLineAppreciation","ActionsDonut","creation_count","edit_count","delete_count","erroneous_fields","corrections","hoverBackgroundColor","style","Action","useEffect","document","title","linkTo","icon","xmlns","aria-hidden","data-prefix","data-icon","message","Trade","id","product","selling_company","strikePrice","quantity","buying_company","maturityDate","months","days","date","Date","styles","StyleSheet","page","padding","fontSize","fontWeight","textAlign","marginTop","infoRow","flexDirection","justifyContent","section","sectionTitle","bottomMargin","marginBottom","padLeft","paddingLeft","red","green","borderingSide","borderRight","PDFDocument","moment","created","format","console","log","created_trades","map","trade","idx","react_pdf_browser_es","key","buying_party","selling_party","underlying_price","strike_price","maturity_date","fromNow","deleted_trades","edited_trades","edits","edit","name","prettyifyAttribute","attribute_edited","old_value","new_value","num_of_new_trades","num_of_edited_trades","num_of_deleted_trades","rootReducer","combineReducers","routing","routerReducer","enhancers","compose","applyMiddleware","thunk","window","devToolsExtension","f","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","objectSpread","history","syncHistoryWithStore","subscribe","throttle","stringify","setItem","saveState","render","es","path","component","changeData","setChangeData","_useState3","_useState4","changeLoading","setChangeLoading","_useState5","_useState6","changeError","setChangeError","_useState7","_useState8","actionsData","setActionsData","_useState9","_useState10","actionsLoading","setActionsLoading","_useState11","_useState12","actionsError","setActionsError","getChangeData","getActionsToday","api","get","then","response","catch","error","Fragment","largest_appreciations","currency","i","change","largest_depreciations","loading","setLoading","setError","trades","setTrades","getDate","getMonth","getFullYear","getDay","getHours","String","getMinutes","padStart","risk","Math","floor","random","product_id","buying_company_id","selling_company_id","setPage","totalTrades","setTotalTrades","changePage","button","total_trades","minHeight","companies","setCompanies","products","setProducts","currencies","setCurrencies","formError","setFormError","_useState13","_useState14","submitError","setSubmitError","_useState15","_useState16","submitLoading","setSubmitLoading","_useState17","_useState18","setSubmitStatus","_useState19","_useState20","sellingCompany","setSellingCompany","_useState21","_useState22","buyingCompany","setBuyingCompany","_useState23","_useState24","setProduct","_useState25","_useState26","underlyingCurrency","setUnderlyingCurrency","_useState27","_useState28","notionalCurrency","setNotionalCurrency","_useState29","_useState30","setMaturityDate","_useState31","_useState32","setQuantity","_useState33","_useState34","setStrikePrice","_useState35","_useState36","underlyingPrice","setUnderlyingPrice","getCompaniesAndCurrenciesAndProducts","interval","setInterval","verifyForm","clearInterval","all","spread","companyRes","currencyRes","onDropdownChangeCompanies","tag","event","toConsumableArray","currentProducts","onDropdownChangeCurrencies","onDropdownChangeProduct","undefined","includes","onSubmit","e","preventDefault","post","underlying_currency","notional_currency","status","trade_id","Autocomplete","onChange","getOptionLabel","option","renderInput","params","TextField","assign","label","variant","disabled","target","min","toISOString","split","step","setTrade","setStatus","setChanges","tradeID","updatedTradeObj","changes","action","persist","prevState","maturityDateChange","quantityChange","strikePriceChange","underlyingPriceChange","setTradeID","justDeleted","setJustDeleted","getTrade","htmlFor","placeholder","Array","searchError","setSearchError","notional_amount","midnight","endOf","searchDate","setSearchDate","dates","subtract","match","reportDate","year","month","day","reportData","setReportData","fileName","textDecoration","borderRadius","_ref","blob","url","href","created_trade","edited_trade","num_of_edits","deleted_trade","deletion","deleted_at","setData","errors_and_corrections","focusable","role","errors","correction_count","eidx","correction","erroneous_attribute","erroneous_value","errorID","field_type","location","reload","submitCorrection","change_type","correctID","field","correctionID","goBack","getElementById"],"mappings":"6WAqCA,IAEeA,EAFLC,YAnBV,SAAyBC,GACrB,MAAO,IAOJ,SAA4BC,GAC/B,OAAOC,YAAmBC,EAAgBF,IAUpCF,CClCK,SAAcK,GAAO,IAAAC,EACJC,oBAAS,GADLC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACzBK,EADyBH,EAAA,GACjBI,EADiBJ,EAAA,GAGhC,OACIK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gEACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kFACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,MAAIE,QAAS,kBAAKC,IAAeC,KAAK,MAAMH,UAAU,sDAAqDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sCAAhB,SAA3G,QAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAKL,GAAWD,IAASS,KAAK,SAASJ,UAAU,4EAC9DH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuBK,QAAQ,cAC9B,IAAXV,EAAkBE,EAAAC,EAAAC,cAAA,QAAMO,SAAS,UAAUC,EAAE,8MAAgN,IAClP,IAAXZ,EAAmBE,EAAAC,EAAAC,cAAA,QAAMO,SAAS,UAAUC,EAAE,uHAAyH,OAKpLV,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAQ,OAAKb,EAAS,QAAU,SAAxB,mCACVE,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMR,QAAS,kBAAKL,GAAU,IAAQc,GAAG,IAAIV,UAAU,sEAAvD,QACAH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMR,QAAS,kBAAKL,GAAU,IAAQc,GAAG,WAAWV,UAAU,2FAA9D,WACAH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMR,QAAS,kBAAKL,GAAU,IAAQc,GAAG,WAAWV,UAAU,2FAA9D,WACAH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMR,QAAS,kBAAKL,GAAU,IAAQc,GAAG,eAAeV,UAAU,2FAAlE,0BAGRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4FAEVW,IAAMC,aAAavB,EAAMwB,SAAUxB,yBCxBhDyB,EAAS,CACTC,QAJiB,yCAKjBC,QAAS,IACTC,QAAS,CACLC,eAAgB,qBAMTC,EADAC,IAAMC,OAAOP,WCbb,SAASQ,EAAyBjC,GAE7C,IAAMkC,EAAW,CACbC,OAAQ,CAACnC,EAAMoC,QAASpC,EAAMqC,QAASrC,EAAMsC,UAAWtC,EAAMuC,SAAUvC,EAAMwC,SAAUxC,EAAMyC,QAASzC,EAAM0C,WAC7GC,SAAU,CACR,CAEEC,MAAM,EACNC,YAAa,GACbC,gBAAiB,wBACjBC,YAAa,oBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,oBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBC,KAAM7D,EAAM6D,KAAKC,UAqCzB,OACItD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CACIC,MAAO,IACPC,OAAQ,GACRC,QArCM,CACdC,OAAQ,CACJC,SAAS,GAEbC,OAAQ,CACJC,MAAO,CAAC,CACJC,UAAW,CACPH,SAAS,EACTI,MAAO,oBAEXC,MAAO,CACHL,SAAS,KAGjBM,MAAO,CAAC,CACJH,UAAW,CACPC,MAAO,oBAEXC,MAAO,CAEHE,SAAU,SAASC,EAAOC,EAAOf,GAC7B,OAAc,IAAVe,GAAeA,IAAUf,EAAOgB,OAAS,EAClCF,EAEA,SAcnBf,KAAM3B,KCnEP,SAAS6C,EAAyB/E,GAE7C,IAAMkC,EAAW,CACbC,OAAQ,CAACnC,EAAMoC,QAASpC,EAAMqC,QAASrC,EAAMsC,UAAWtC,EAAMuC,SAAUvC,EAAMwC,SAAUxC,EAAMyC,QAASzC,EAAM0C,WAC7GC,SAAU,CACR,CAEEC,MAAM,EACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,qBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBC,KAAM7D,EAAM6D,KAAKC,UAqCzB,OACItD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CACIC,MAAO,IACPC,OAAQ,GACRC,QArCM,CACdC,OAAQ,CACJC,SAAS,GAEbC,OAAQ,CACJC,MAAO,CAAC,CACJC,UAAW,CACPH,SAAS,EACTI,MAAO,oBAEXC,MAAO,CACHL,SAAS,KAGjBM,MAAO,CAAC,CACJH,UAAW,CACPC,MAAO,oBAEXC,MAAO,CAEHE,SAAU,SAASC,EAAOC,EAAOf,GAC7B,OAAc,IAAVe,GAAeA,IAAUf,EAAOgB,OAAS,EAClCF,EAEA,SAcnBf,KAAM3B,KCnEP,SAAS8C,EAAahF,GACjC,IAAM6D,EAAO,CACT1B,OAAQ,CACJ,YACA,QACA,YACA,6BACA,eAEJQ,SAAU,CAAC,CACPkB,KAAM,CAAC7D,EAAM6D,KAAKoB,eAAgBjF,EAAM6D,KAAKqB,WAAYlF,EAAM6D,KAAKsB,aAAcnF,EAAM6D,KAAKuB,iBAAkBpF,EAAM6D,KAAKwB,aAC1HvC,gBAAiB,CACjB,0BACA,2BACA,0BACA,0BACA,4BAEAwC,qBAAsB,CACtB,UACA,UACA,UACA,UACA,cAWR,OACI9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCAAqC4E,MAAO,CAACvB,MAAO,SAC/DxD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CACIF,KAAMA,EACNK,QAVO,CACfC,OAAQ,CACJC,SAAS,OC7BN,SAASoB,EAAOxF,GAM3B,OAJAyF,oBAAU,WACNC,SAASC,MAAQ,6BAIjBnF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kJAAkJC,QAAS,kBAAKC,IAAeC,KAAKd,EAAM4F,UACrMpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACK,WAAfX,EAAM6F,KAAoBrF,EAAAC,EAAAC,cAAA,OAAKsD,MAAM,KAAKC,OAAO,KAAKrB,KAAK,OAAOkD,MAAM,8BAA6BtF,EAAAC,EAAAC,cAAA,QAAMQ,EAAE,giBAAgiB0B,KAAK,aAAoB,GACvpB,SAAf5C,EAAM6F,KAAmBrF,EAAAC,EAAAC,cAAA,OAAKsD,MAAM,KAAKC,OAAO,KAAKtD,UAAU,0BAA0BoF,cAAY,OAAOC,cAAY,MAAMC,YAAU,SAASH,MAAM,6BAA6B9E,QAAQ,eAAcR,EAAAC,EAAAC,cAAA,QAAMkC,KAAK,eAAe1B,EAAE,+VAAsW,GAC7jB,WAAflB,EAAM6F,KAAoBrF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qDAA0D,IAEtGH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oCAAoCX,EAAM2F,OACxDnF,EAAAC,EAAAC,cAAA,SAAIV,EAAMkG,QAAV,IAAmB1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDAAkDmF,MAAM,6BAA6B9E,QAAQ,YAAYgD,MAAM,KAAKC,OAAO,MAAKzD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcO,EAAE,yHChBnM,SAASiF,EAAMnG,GAiB1B,OACIQ,EAAAC,EAAAC,cAAA,OAAKE,QAAS,kBAAKC,IAAeC,KAAK,UAAYd,EAAMoG,KAAKzF,UAAU,4CACpEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0FAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACS,WAAlBX,EAAMqG,QACH7F,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uCAAuCX,EAAMqG,QACzD7F,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBAAhB,IACMX,EAAMsG,gBADZ,MAIJ9F,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sCACXX,EAAMqG,SAGf7F,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iDAAiDX,EAAMuG,YAAvE,MAAuFvG,EAAMwG,YAGrGhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,SACAH,EAAAC,EAAAC,cAAA,SAAIV,EAAMyG,iBAEdjG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,UACAH,EAAAC,EAAAC,cAAA,SAAIV,EAAMsG,oBAItB9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4EAA4EX,EAAM0G,kBC1CnH,IAAMC,EAAS,CAAC,MAAO,MAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACxFC,EAAO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC5EC,EAAO,IAAIC,iFCHTC,EAASC,IAAWhF,OAAO,CAC7BiF,KAAM,CACFnE,gBAAiB,UACjBoE,QAAS,GACTC,SAAU,IAEdxB,MAAO,CACHnB,MAAO,UACP4C,WAAY,IACZD,SAAU,GACVE,UAAW,SACXC,UAAW,IAEfC,QAAS,CACLD,UAAW,GACXlD,QAAS,OACToD,cAAe,MACfC,eAAgB,gBAChBN,SAAU,IAEdO,QAAS,CACLJ,UAAW,IAEfK,aAAc,CACVnD,MAAO,UACP2C,SAAU,GACVC,WAAY,KAEhBQ,aAAc,CACVC,aAAc,IAElBC,QAAS,CACLC,YAAa,IAEjBC,IAAK,CACDxD,MAAO,OAEXyD,MAAO,CACHzD,MAAO,SAEX0D,cAAe,CACXC,YAAa,qBAIN,SAASC,EAAYpI,GAChC,IAAI6G,EAAOwB,IAAOrI,EAAM6D,KAAKyE,QAAS,6BAA6BC,OAAO,sBAC1EC,QAAQC,IAAI,aAAczI,EAAM6D,MAEhC,IAgBI6E,EAAiB1I,EAAM6D,KAAK6E,eAAeC,IAAI,SAASC,EAAOC,GAC/D,OACIrI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMC,IAAKF,GACPrI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,eAASF,EAAMxC,IACf5F,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOe,SAApB,mBAA8Cc,EAAMI,cACpDxI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOe,SAApB,oBAA+Cc,EAAMK,eACrDzI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOe,SAApB,YAAuCc,EAAMvC,SAC7C7F,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOe,SAApB,aAAwCc,EAAMpC,UAC9ChG,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOe,SAApB,qBAAgDc,EAAMM,kBACtD1I,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOe,SAApB,iBAA4Cc,EAAMO,cAClD3I,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOe,SAApB,kBAA6Cc,EAAMQ,eACnD5I,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOe,SAApB,YAAuCO,IAAOO,EAAMN,SAASe,cAMrEC,EAAiBtJ,EAAM6D,KAAKyF,eAAeX,IAAI,SAASC,EAAOC,GAC/D,OAAQrI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAOC,IAAKF,GAAZ,UAAoBD,EAAMA,MAAMxC,MAGxCmD,EAAgBvJ,EAAM6D,KAAK0F,cAAcZ,IAAI,SAASC,EAAOC,GAC7D,OACIrI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMC,IAAKF,GACPrI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,eAASF,EAAMA,MAAMxC,IACpBwC,EAAMY,MAAMb,IAAI,SAASc,EAAMZ,GAC5B,OAAQrI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMC,IAAKF,EAAKtD,MAAOwB,EAAOe,SAAStH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOmB,eA1CxD,SAACwB,GACxB,OAAQA,GACJ,IAAK,mBACD,MAAO,mBACX,IAAK,eACD,MAAO,eACX,IAAK,WACD,MAAO,WACX,IAAK,gBACD,MAAO,gBAEX,QACI,MAAO,QA8BgFC,CAAmBF,EAAKG,mBAAnG,KAA8HpJ,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOiB,KAAMyB,EAAKI,WAA7J,YAAoLrJ,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOkB,OAAQwB,EAAKK,iBAO7O,OACItJ,EAAAC,EAAAC,cAACoI,EAAA,EAAD,KACItI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOE,MAChBzG,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOpB,OAAQkB,GAC5BrG,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOQ,SAChB/G,EAAAC,EAAAC,cAACoI,EAAA,EAAD,oBAAmB9I,EAAM6D,KAAKkG,mBAC9BvJ,EAAAC,EAAAC,cAACoI,EAAA,EAAD,uBAAuB9I,EAAM6D,KAAKmG,sBAClCxJ,EAAAC,EAAAC,cAACoI,EAAA,EAAD,wBAAuB9I,EAAM6D,KAAKoG,wBAGtCzJ,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOW,SAChBlH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOY,cAApB,cACAnH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOa,cAApB,4CAECc,GAKLlI,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOW,SAChBlH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOY,cAApB,iBACAnH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOa,cAApB,uDAEC2B,GAGL/I,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOW,SAChBlH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOY,cAApB,kBACAnH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAMvD,MAAOwB,EAAOa,cAApB,wCAEC0B,kBCzHNY,EAFKC,YAAgB,CAACC,QAASC,6CCHxCC,EAAYC,YAAQC,YAAgBC,KAAQC,OAAOC,kBAAoBD,OAAOC,oBAAsB,SAAAC,GAAC,OAAIA,IAMzGC,ECVmB,WACrB,IACI,IAAMC,EAAkBC,aAAaC,QATpB,gBAUjB,GAAwB,OAApBF,EACA,OAEJ,OAAOG,KAAKC,MAAMJ,GACpB,MAAOK,GAEL,YADA3C,QAAQC,IAAI0C,IDEGC,GAGjBC,EAAQC,YAAYpB,EAAD9J,OAAAmL,EAAA,EAAAnL,CAAA,GANJ,GAMuCyK,GAAiBP,GAGhEkB,EAAUC,+BAAqB5K,IAAgBwK,GAe5DA,EAAMK,UAAUC,IAAS,YCdA,SAAC/L,GACtB,IACI,IAAMkL,EAAkBG,KAAKW,UAAUhM,GACvCmL,aAAac,QA3BI,eA2BsBf,GACzC,MAAOK,GACL3C,QAAQC,IAAI0C,IDchBW,CAHkB,KAJK,MAUZT,QEXfU,iBACIvL,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAUX,MAAOA,GACb7K,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQoK,QAASA,GACbhL,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAO6K,KAAK,IAAIC,UAAWxM,GACvBc,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAY8K,UCjCb,WAAgB,IAAAjM,EACSC,mBAAS,MADlBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACpBkM,EADoBhM,EAAA,GACRiM,EADQjM,EAAA,GAAAkM,EAEenM,oBAAS,GAFxBoM,EAAAlM,OAAAC,EAAA,EAAAD,CAAAiM,EAAA,GAEpBE,EAFoBD,EAAA,GAELE,EAFKF,EAAA,GAAAG,EAGWvM,mBAAS,IAHpBwM,EAAAtM,OAAAC,EAAA,EAAAD,CAAAqM,EAAA,GAGpBE,EAHoBD,EAAA,GAGPE,EAHOF,EAAA,GAAAG,EAKW3M,mBAAS,MALpB4M,EAAA1M,OAAAC,EAAA,EAAAD,CAAAyM,EAAA,GAKpBE,EALoBD,EAAA,GAKPE,EALOF,EAAA,GAAAG,EAMiB/M,oBAAS,GAN1BgN,EAAA9M,OAAAC,EAAA,EAAAD,CAAA6M,EAAA,GAMpBE,EANoBD,EAAA,GAMJE,EANIF,EAAA,GAAAG,EAOanN,mBAAS,IAPtBoN,EAAAlN,OAAAC,EAAA,EAAAD,CAAAiN,EAAA,GAOpBE,EAPoBD,EAAA,GAONE,EAPMF,EAAA,GAS3B7H,oBAAU,WACNC,SAASC,MAAQ,wBACjB8H,IACAC,KACD,IAEH,IAAMD,EAAgB,WAClBjB,GAAiB,GACjBmB,EAAIC,IAAI,4BAA4BC,KAAK,SAAAC,GACrC1B,EAAc0B,EAASjK,MACvB2I,GAAiB,KAClBuB,MAAM,SAAAC,GACLpB,EAAe,kDACfJ,GAAiB,MAInBkB,EAAkB,WACpBN,GAAkB,GAClBO,EAAIC,IAAI,yBAAyBC,KAAK,SAAAC,GAClCd,EAAec,EAASjK,MACxBuJ,GAAkB,KACnBW,MAAM,SAAAC,GACLR,EAAgB,wCAChBJ,GAAkB,MAI1B,OACI5M,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACIzN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAd,QACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,IAAb,oDACAH,EAAAC,EAAAC,cAAA,2HAGJF,EAAAC,EAAAC,cAAA,WAAS0F,GAAG,qBAAqBzF,UAAU,kBACvCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2CAAd,8BAEIH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAFlB,IAEuCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iCAAhB,eACnCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qCAAb,6FAGHgM,EAAY7H,OAAS,EAAItE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBgM,GACvDJ,EAAgB/L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CAC/BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACVwL,EAAW+B,sBAAsBvF,IAAI,SAACwF,EAAUC,GAAX,OAClC5N,EAAAC,EAAAC,cAAA,OAAKqI,IAAKqF,EAAGzN,UAAU,mDACnBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCACTH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sCAAsCwN,EAASA,UAC/D3N,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sCAAhB,KAAuDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAsBwN,EAASE,SAG1G7N,EAAAC,EAAAC,cAACqE,EAAD,CACIgE,IAAKqF,EACLzN,UAAU,gBACVkD,KAAMsK,EACN/L,QAAS+J,EAAW/J,QACpBC,QAAS8J,EAAW9J,QACpBC,UAAW6J,EAAW7J,UACtBC,SAAU4J,EAAW5J,SACrBC,SAAU2J,EAAW3J,SACrBC,QAAS0J,EAAW1J,QACpBC,UAAWyJ,EAAWzJ,iBAU1ClC,EAAAC,EAAAC,cAAA,WAAS0F,GAAG,mBAAmBzF,UAAU,kBACrCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2CAAd,8BAEIH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAFlB,IAEuCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iCAAhB,eACnCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qCAAb,6FAGHgM,EAAY7H,OAAS,EAAItE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBgM,GACvDJ,EAAgB/L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CAC/BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACVwL,EAAWmC,sBAAsB3F,IAAI,SAACwF,EAAUC,GAAX,OAClC5N,EAAAC,EAAAC,cAAA,OAAKqI,IAAKqF,EAAGzN,UAAU,mDACnBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCACTH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sCAAsCwN,EAASA,UAC/D3N,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oCAAhB,KAAqDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAsBwN,EAASE,SAGxG7N,EAAAC,EAAAC,cAACuB,EAAD,CACI8G,IAAKqF,EACLzN,UAAU,gBACVkD,KAAMsK,EACN/L,QAAS+J,EAAW/J,QACpBC,QAAS8J,EAAW9J,QACpBC,UAAW6J,EAAW7J,UACtBC,SAAU4J,EAAW5J,SACrBC,SAAU2J,EAAW3J,SACrBC,QAAS0J,EAAW1J,QACpBC,UAAWyJ,EAAWzJ,iBAU1ClC,EAAAC,EAAAC,cAAA,WAAS0F,GAAG,gBAAgBzF,UAAU,kBAClCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2CAAd,iBACC4M,EAAazI,OAAS,EACnBtE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgB4M,GAEjCJ,EAAiB3M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CAChCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAAA,oJAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4CAAb,aACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaoM,EAAY9H,iBAG1CzE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uDAAb,SACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaoM,EAAY7H,aAG1C1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,+CAAb,aACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaoM,EAAY5H,eAG1C3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCAAmC4E,MAAO,CAACzC,gBAAiB,YAAzE,oBACAtC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaoM,EAAY3H,mBAG1C5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCAAmC4E,MAAO,CAACzC,gBAAiB,YAAzE,eACAtC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaoM,EAAY1H,eAI9C7E,EAAAC,EAAAC,cAACsE,EAAD,CAAcrE,UAAU,OAAOkD,KAAMkJ,OAQjDvM,EAAAC,EAAAC,cAAA,WAAS0F,GAAG,gCDlIR5F,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAO6K,KAAK,WAAWC,UL1BxB,WAAmB,IAAAjM,EACAC,oBAAS,GADTC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACvBsO,EADuBpO,EAAA,GACdqO,EADcrO,EAAA,GAAAkM,EAEJnM,mBAAS,IAFLoM,EAAAlM,OAAAC,EAAA,EAAAD,CAAAiM,EAAA,GAEvB2B,EAFuB1B,EAAA,GAEhBmC,EAFgBnC,EAAA,GAAAG,EAGFvM,mBAAS,IAHPwM,EAAAtM,OAAAC,EAAA,EAAAD,CAAAqM,EAAA,GAGvBiC,EAHuBhC,EAAA,GAGfiC,EAHejC,EAAA,GAoB9B,OAfAjH,oBAAU,WACN+C,QAAQC,IAAI,wBACZkF,EAAIC,IAAI,+BAA+BC,KAAK,SAAAC,GACxCtF,QAAQC,IAAIqF,GACZW,EAAS,IACTD,GAAW,GACXG,EAAUb,EAASjK,QACpBkK,MAAM,SAAA5C,GACL3C,QAAQC,IAAI0C,GACZsD,EAAStD,EAAIjF,SACbsI,GAAW,MAGhB,IAECR,EAAMlJ,OAAS,EAEXtE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACAzN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAd,gBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qEAAhB,IAAsFkG,EAAK+H,UAA3F,IAAuGjI,EAAOE,EAAKgI,YAAnH,IAAiIhI,EAAKiI,cAAtI,KAAuJlI,EAAKC,EAAKkI,UAAjK,MAA+KlI,EAAKmI,WAApL,IAAiMC,OAAOpI,EAAKqI,cAAcC,SAAS,EAAG,QAE3O3O,EAAAC,EAAAC,cAAA,uDAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gEACXH,EAAAC,EAAAC,cAAC8E,EAAD,CAAQG,MAAM,iBAAiBO,QAAQ,0DAAqDN,OAAO,wBAAwBC,KAAK,WAChIrF,EAAAC,EAAAC,cAAC8E,EAAD,CAAQG,MAAM,eAAeO,QAAQ,6DAAwDN,OAAO,sBAAsBC,KAAK,SAC/HrF,EAAAC,EAAAC,cAAC8E,EAAD,CAAQG,MAAM,iBAAiBO,QAAQ,mDAAmDN,OAAO,wBAAwBC,KAAK,YAGlIrF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgBqN,IAKlCxN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACAzN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAd,gBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qEAAhB,IAAsFkG,EAAK+H,UAA3F,IAAuGjI,EAAOE,EAAKgI,YAAnH,IAAiIhI,EAAKiI,cAAtI,KAAuJlI,EAAKC,EAAKkI,UAAjK,MAA+KlI,EAAKmI,WAApL,IAAiMC,OAAOpI,EAAKqI,cAAcC,SAAS,EAAG,QAE3O3O,EAAAC,EAAAC,cAAA,uDAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gEACXH,EAAAC,EAAAC,cAAC8E,EAAD,CAAQG,MAAM,iBAAiBO,QAAQ,0DAAqDN,OAAO,wBAAwBC,KAAK,WAChIrF,EAAAC,EAAAC,cAAC8E,EAAD,CAAQG,MAAM,eAAeO,QAAQ,qDAAqDN,OAAO,sBAAsBC,KAAK,SAC5HrF,EAAAC,EAAAC,cAAC8E,EAAD,CAAQG,MAAM,iBAAiBO,QAAQ,mDAAmDN,OAAO,wBAAwBC,KAAK,YAGlIrF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qCAAd,UAAyDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2CAAhB,uBACzDH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAG,eAAeV,UAAU,+IAAlC,cAGH4N,EAAU/N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CAER,IAAlB+N,EAAO5J,OAAetE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gDAAb,gCACtBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACV+N,EAAO/F,IAAI,SAACC,EAAOwF,GAAR,OACR5N,EAAAC,EAAAC,cAACyF,EAAD,CACI4C,IAAKqF,EACLgB,KAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,EACxCnJ,GAAIwC,EAAMxC,GACVrF,KAAM6H,EAAM4G,WACZnJ,QAASuC,EAAMvC,QACfoJ,kBAAmB7G,EAAMI,aACzB0G,mBAAoB9G,EAAMK,cAC1BxC,eAAgBmC,EAAMnC,eACtBH,gBAAiBsC,EAAMtC,gBACvBE,SAAUoC,EAAMpC,SAChBD,YAAaqC,EAAMO,aACnBzC,aAAckC,EAAMQ,wBKrD5B5I,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAO6K,KAAK,eAAeC,UEpC5B,WAEX,IAAMvF,EAAS,CAAC,MAAO,MAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACxFC,EAAO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC5EC,EAAO,IAAIC,KAJkB7G,EAMTC,mBAAS,GANAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAM1BgH,EAN0B9G,EAAA,GAMpBwP,EANoBxP,EAAA,GAAAkM,EAOKnM,mBAAS,GAPdoM,EAAAlM,OAAAC,EAAA,EAAAD,CAAAiM,EAAA,GAO1BuD,EAP0BtD,EAAA,GAObuD,EAPavD,EAAA,GAAAG,EAQPvM,mBAAS,IARFwM,EAAAtM,OAAAC,EAAA,EAAAD,CAAAqM,EAAA,GAQ1BuB,EAR0BtB,EAAA,GAQnB+B,EARmB/B,EAAA,GAAAG,EASH3M,oBAAS,GATN4M,EAAA1M,OAAAC,EAAA,EAAAD,CAAAyM,EAAA,GAS1B0B,EAT0BzB,EAAA,GASjB0B,EATiB1B,EAAA,GAAAG,EAUL/M,mBAAS,IAVJgN,EAAA9M,OAAAC,EAAA,EAAAD,CAAA6M,EAAA,GAU1ByB,EAV0BxB,EAAA,GAUlByB,EAVkBzB,EAAA,GAY3B4C,EAAa,SAACC,GACbxB,IAIW,aAAXwB,GAAkC,IAAT9I,GACxB0I,EAAQ,GAEE,aAAXI,GACCJ,EAAQ1I,EAAO,GAGL,SAAX8I,GACCJ,EAAQ1I,EAAO,KA4BvB,OAtBAxB,oBAAU,WACN+I,GAAW,GACXb,EAAIC,IAAI,gBAAgBC,KAAK,SAAAC,GACzBW,EAAS,IACToB,EAAe/B,EAASjK,KAAKmM,gBAC9BjC,MAAM,SAAAC,GACLS,EAAS,gDAGbd,EAAIC,IAAJ,6BAAAzM,OAAqC8F,IAAQ4G,KAAK,SAAAC,GAC9CtF,QAAQC,IAAIqF,GACZW,EAAS,IACTD,GAAW,GACXG,EAAUb,EAASjK,QACpBkK,MAAM,SAAA5C,GACL3C,QAAQC,IAAI0C,GACZsD,EAAStD,EAAIjF,SACbsI,GAAW,MAGhB,CAACvH,IAEA+G,EAAMlJ,OAAS,EAEXtE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACAzN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAd,sBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qEAAhB,IAAsFkG,EAAK+H,UAA3F,IAAuGjI,EAAOE,EAAKgI,YAAnH,IAAiIhI,EAAKiI,cAAtI,KAAuJlI,EAAKC,EAAKkI,UAAjK,MAA+KlI,EAAKmI,WAApL,IAAiMC,OAAOpI,EAAKqI,cAAcC,SAAS,EAAG,QAE3O3O,EAAAC,EAAAC,cAAA,uDAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gEACXH,EAAAC,EAAAC,cAAC8E,EAAD,CAAQG,MAAM,iBAAiBO,QAAQ,0DAAqDN,OAAO,wBAAwBC,KAAK,WAChIrF,EAAAC,EAAAC,cAAC8E,EAAD,CAAQG,MAAM,eAAeO,QAAQ,6DAAwDN,OAAO,sBAAsBC,KAAK,SAC/HrF,EAAAC,EAAAC,cAAC8E,EAAD,CAAQG,MAAM,iBAAiBO,QAAQ,mDAAmDN,OAAO,wBAAwBC,KAAK,YAGlIrF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgBqN,IAMlCxN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACIzN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAd,gBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qEAAhB,IAAsFkG,EAAK+H,UAA3F,IAAuGjI,EAAOE,EAAKgI,YAAnH,IAAiIhI,EAAKiI,cAAtI,KAAuJlI,EAAKC,EAAKkI,UAAjK,MAA+KlI,EAAKmI,WAApL,IAAiMC,OAAOpI,EAAKqI,cAAcC,SAAS,EAAG,QAE3O3O,EAAAC,EAAAC,cAAA,uDAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gEACXH,EAAAC,EAAAC,cAAC8E,EAAD,CAAQG,MAAM,iBAAiBO,QAAQ,0DAAqDN,OAAO,wBAAwBC,KAAK,WAChIrF,EAAAC,EAAAC,cAAC8E,EAAD,CAAQG,MAAM,eAAeO,QAAQ,qDAAqDN,OAAO,sBAAsBC,KAAK,SAC5HrF,EAAAC,EAAAC,cAAC8E,EAAD,CAAQG,MAAM,iBAAiBO,QAAQ,mDAAmDN,OAAO,wBAAwBC,KAAK,YAGlIrF,EAAAC,EAAAC,cAAA,OAAK6E,MAAO,CAAC0K,UAAW,SAAUtP,UAAU,qBAC5CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qCAAd,UAAyDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2CAAhB,wBAGxD4N,EAAU/N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CAER,IAAlB+N,EAAO5J,OAAetE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gDAAb,gCACtBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACV+N,EAAO/F,IAAI,SAACC,EAAOwF,GAAR,OACR5N,EAAAC,EAAAC,cAACyF,EAAD,CACI4C,IAAKqF,EACLgB,KAAMC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,EACxCnJ,GAAIwC,EAAMxC,GACVrF,KAAM6H,EAAM4G,WACZnJ,QAASuC,EAAMvC,QACfoJ,kBAAmB7G,EAAMI,aACzB0G,mBAAoB9G,EAAMK,cAC1BxC,eAAgBmC,EAAMnC,eACtBH,gBAAiBsC,EAAMtC,gBACvBE,SAAUoC,EAAMpC,SAChBD,YAAaqC,EAAMO,aACnBzC,aAAckC,EAAMQ,oBAOpC5I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,oBAAWF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAwB,IAAVsG,EAAK,IAA9C,OAAiEzG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAwB,IAAVsG,EAAK,GAAU,IAA9G,OAA4HzG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaiP,GAAzJ,WACApP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAKkP,EAAW,aAAanP,UAAU,qDAAxD,YACAH,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAKkP,EAAW,SAASnP,UAAU,gDAApD,eFzFRH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAO6K,KAAK,wBAAwBC,UGnCrC,WAAuB,IAAAjM,EAGJC,oBAAS,GAHLC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAG3BsO,EAH2BpO,EAAA,GAGlBqO,EAHkBrO,EAAA,GAAAkM,EAIAnM,mBAAS,IAJToM,EAAAlM,OAAAC,EAAA,EAAAD,CAAAiM,EAAA,GAI3B6D,EAJ2B5D,EAAA,GAIhB6D,EAJgB7D,EAAA,GAAAG,EAKFvM,mBAAS,IALPwM,EAAAtM,OAAAC,EAAA,EAAAD,CAAAqM,EAAA,GAK3B2D,EAL2B1D,EAAA,GAKjB2D,EALiB3D,EAAA,GAAAG,EAME3M,mBAAS,IANX4M,EAAA1M,OAAAC,EAAA,EAAAD,CAAAyM,EAAA,GAM3ByD,EAN2BxD,EAAA,GAMfyD,EANezD,EAAA,GAAAG,EAOR/M,mBAAS,IAPDgN,EAAA9M,OAAAC,EAAA,EAAAD,CAAA6M,EAAA,GAO3Be,EAP2Bd,EAAA,GAOpBuB,EAPoBvB,EAAA,GAAAG,EAQAnN,mBAAS,6CARToN,EAAAlN,OAAAC,EAAA,EAAAD,CAAAiN,EAAA,GAQ3BmD,EAR2BlD,EAAA,GAQhBmD,EARgBnD,EAAA,GAAAoD,EASIxQ,mBAAS,IATbyQ,EAAAvQ,OAAAC,EAAA,EAAAD,CAAAsQ,EAAA,GAS3BE,EAT2BD,EAAA,GASdE,EATcF,EAAA,GAAAG,EAUQ5Q,oBAAS,GAVjB6Q,EAAA3Q,OAAAC,EAAA,EAAAD,CAAA0Q,EAAA,GAU3BE,EAV2BD,EAAA,GAUZE,EAVYF,EAAA,GAAAG,EAWMhR,mBAAS,IAXfiR,EAAA/Q,OAAAC,EAAA,EAAAD,CAAA8Q,EAAA,GAWbE,GAXaD,EAAA,GAAAA,EAAA,IAAAE,EAaUnR,mBAAS,MAbnBoR,EAAAlR,OAAAC,EAAA,EAAAD,CAAAiR,EAAA,GAa3BE,EAb2BD,EAAA,GAaXE,EAbWF,EAAA,GAAAG,EAcQvR,mBAAS,MAdjBwR,EAAAtR,OAAAC,EAAA,EAAAD,CAAAqR,EAAA,GAc3BE,EAd2BD,EAAA,GAcZE,EAdYF,EAAA,GAAAG,EAeJ3R,mBAAS,MAfL4R,EAAA1R,OAAAC,EAAA,EAAAD,CAAAyR,EAAA,GAe3BxL,GAf2ByL,EAAA,GAelBC,GAfkBD,EAAA,GAAAE,GAgBkB9R,mBAAS,MAhB3B+R,GAAA7R,OAAAC,EAAA,EAAAD,CAAA4R,GAAA,GAgB3BE,GAhB2BD,GAAA,GAgBPE,GAhBOF,GAAA,GAAAG,GAiBclS,mBAAS,MAjBvBmS,GAAAjS,OAAAC,EAAA,EAAAD,CAAAgS,GAAA,GAiB3BE,GAjB2BD,GAAA,GAiBTE,GAjBSF,GAAA,GAAAG,GAkBMtS,mBAAS,MAlBfuS,GAAArS,OAAAC,EAAA,EAAAD,CAAAoS,GAAA,GAkB3B9L,GAlB2B+L,GAAA,GAkBbC,GAlBaD,GAAA,GAAAE,GAmBFzS,mBAAS,GAnBP0S,GAAAxS,OAAAC,EAAA,EAAAD,CAAAuS,GAAA,GAmB3BnM,GAnB2BoM,GAAA,GAmBjBC,GAnBiBD,GAAA,GAAAE,GAoBI5S,mBAAS,GApBb6S,GAAA3S,OAAAC,EAAA,EAAAD,CAAA0S,GAAA,GAoB3BvM,GApB2BwM,GAAA,GAoBdC,GApBcD,GAAA,GAAAE,GAqBY/S,mBAAS,GArBrBgT,GAAA9S,OAAAC,EAAA,EAAAD,CAAA6S,GAAA,GAqB3BE,GArB2BD,GAAA,GAqBVE,GArBUF,GAAA,GAuBlCzN,oBAAU,WACN4N,KAEA,IAAIC,EAAWC,YAAY,WACvBC,GAAWjC,EAAgBI,EAAetL,GAAS6L,GAAoBI,GAAkB5L,GAAcF,GAAUD,GAAa4M,KAC/H,KAEH,OAAO,WACHM,cAAcH,KAEnB,CAAC/B,EAAgBI,EAAetL,GAAS6L,GAAoBI,GAAkB5L,GAAcF,GAAUD,GAAa4M,KAGvH,IAAME,GAAuC,WAEhB,IAArBnD,EAAUpL,QAAsC,IAAtBwL,EAAWxL,SAIzC0J,GAAW,GACXzM,IAAM2R,IAAI,CACN/F,EAAIC,IAAI,iBACRD,EAAIC,IAAI,oBAETC,KAAK9L,IAAM4R,OAAO,SAACC,EAAYC,GAC9BrL,QAAQC,IAAImL,EAAYC,GACxBrF,GAAW,GACX2B,EAAayD,EAAW/P,MACxB0M,EAAcsD,EAAYhQ,SAK1BkK,MAAM,SAAA5C,GACNsD,EAAStD,EAAIjF,SACbsI,GAAW,GACXhG,QAAQC,IAAI0C,KAEhBqI,OAGEM,GAA4B,SAACC,EAAKC,EAAOlQ,GAE3C,GADA0E,QAAQC,IAAIsL,EAAKjQ,GACL,oBAARiQ,EAA2B,CAmB3B,GAjBAhC,GAAW,MAEXP,EAAkB1N,GAGJ,OAAXA,GACC6J,EAAIC,IAAI,8BAAgC9J,EAAOsC,IAAIyH,KAAK,SAAAC,GACpDtF,QAAQC,IAAIqF,GACZuC,EAAW,CAAE,CAACjK,IAAK,EAAGsD,KAAM,WAAa5F,EAAO4F,KAAO,MAA5CvI,OAAAf,OAAA6T,EAAA,EAAA7T,CAAqD0N,EAASjK,UAC1EkK,MAAM,SAAA5C,GACLsD,EAAStD,EAAIjF,WAON,OAAXpC,EAGA,OAFA0N,EAAkB,WAClBO,GAAW,MAKf,IAAImC,EAAkB9D,EACC,IAApBA,EAAStL,SACRoP,EAAgB,GAAK,CAAC9N,IAAK,EAAGsD,KAAM,WAAa5F,EAAO4F,KAAO,KAC/D2G,EAAY6D,IAGR,mBAARH,GACAnC,EAAiB9N,IAInBqQ,GAA6B,SAACJ,EAAKC,EAAOlQ,GAC5C0E,QAAQC,IAAIsL,EAAKjQ,GACL,wBAARiQ,GACA5B,GAAsBrO,GAEd,sBAARiQ,GACAxB,GAAoBzO,IAItBsQ,GAA0B,SAACJ,EAAOlQ,GACpC0E,QAAQC,IAAIuL,EAAOlQ,GACnBiO,GAAWjO,IAkBT0P,GAAa,SAACjC,EAAgBI,EAAetL,EAAS6L,EAAoBI,EAAkB5L,EAAcF,EAAUD,EAAa4M,GAE5G,OAAnB5B,EAIkB,OAAlBI,EAIiB,OAAlBA,GAA4C,MAAlBJ,GAA0BI,EAAcjI,OAAS6H,EAAe7H,KAI1FlD,EAAW,EACViK,EAAa,yCAGG,KAAjB/J,EAIY,OAAZL,EAIuB,OAAvB6L,EAIqB,OAArBI,EAQA/L,EAAc,IACbkK,EAAa,+BAGd0C,EAAkB,IACjB1C,EAAa,yCAGD4D,IAAZhO,IACIA,EAAQqD,KAAK4K,SAAS,WAAcjO,EAAQqD,KAAK4K,SAAS/C,EAAe7H,MAKjF+G,EAAa,IAJLA,EAAa,qIAjBjBA,EAAa,oCAJbA,EAAa,uCAJbA,EAAa,sIAJbA,EAAa,gCARbA,EAAa,yDAJbA,EAAa,iCAJbA,EAAa,mCA0FrB,OAAIlC,GAAWP,EAEPxN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACAzN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAd,sBACAH,EAAAC,EAAAC,cAAA,yDACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACdH,EAAAC,EAAAC,cAAA,mPAIFsN,GACExN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kCAAd,SACAH,EAAAC,EAAAC,cAAA,SAAIsN,IAIXO,GAAW/N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CAO/BH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACAzN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAd,sBACAH,EAAAC,EAAAC,cAAA,yDACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACdH,EAAAC,EAAAC,cAAA,mPAKJF,EAAAC,EAAAC,cAAA,QAAM6T,SAzEO,SAACC,GACdA,EAAEC,iBAECjE,EAAU1L,OAAS,IAItBmM,GAAiB,GACjBJ,EAAe,IACfO,EAAgB,IAChBzD,EAAI+G,KAAK,iBAAkB,CACvBzL,cAAiBsI,EAAenL,GAChC4C,aAAgB2I,EAAcvL,GAC9BC,QAAWA,GAAQD,GACnBI,SAAYA,GACZ4C,cAAiB1C,GACjBiO,oBAAuBzC,GAAmB/D,SAC1CyG,kBAAqBtC,GAAiBnE,SACtChF,aAAgB5C,GAChB2C,iBAAoBiK,KACrBtF,KAAK,SAAAC,GACJtF,QAAQC,IAAIqF,GACZmD,GAAiB,GACO,MAApBnD,EAAS+G,SACTzD,EAAgB,+BAChBvQ,IAAeC,KAAf,UAAAK,OAA8B2M,EAASjK,KAAKiR,cAEjD/G,MAAM,SAAA5C,GACL3C,QAAQC,IAAI0C,GACZ8F,GAAiB,GACjBJ,EAAe1F,EAAIjF,aA2CGvF,UAAU,wGAGhCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yCAAb,mBACAH,EAAAC,EAAAC,cAACqU,EAAA,EAAD,CACI3O,GAAG,2BACHsD,KAAK,2BACLxF,QAASgM,EACT8E,SAAU,SAAChB,EAAOlQ,GAAR,OAAkBgQ,GAA0B,kBAAmBE,EAAOlQ,IAChFmR,eAAgB,SAAAC,GAAM,OAAIA,EAAOxL,MACjCnE,MAAO,CAAEvB,MAAO,KAChBmR,YAAa,SAAAC,GAAM,OAAI5U,EAAAC,EAAAC,cAAC2U,EAAA,EAADjV,OAAAkV,OAAA,GAAeF,EAAf,CAAuBG,MAAM,kBAAkBC,QAAQ,kBAKtFhV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yCAAb,kBACAH,EAAAC,EAAAC,cAACqU,EAAA,EAAD,CACI3O,GAAG,0BACHsD,KAAK,0BACLxF,QAASgM,EACT8E,SAAU,SAAChB,EAAOlQ,GAAR,OAAkBgQ,GAA0B,iBAAkBE,EAAOlQ,IAC/EmR,eAAgB,SAAAC,GAAM,OAAIA,EAAOxL,MACjCnE,MAAO,CAAEvB,MAAO,KAChBmR,YAAa,SAAAC,GAAM,OAAI5U,EAAAC,EAAAC,cAAC2U,EAAA,EAADjV,OAAAkV,OAAA,GAAeF,EAAf,CAAuBG,MAAM,iBAAiBC,QAAQ,kBAKrFhV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yCAAb,gBAEoB,OAAnB4Q,EACG/Q,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACAzN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,yCACAH,EAAAC,EAAAC,cAACqU,EAAA,EAAD,CACI3O,GAAG,mBACHsD,KAAK,mBACLxF,QAASkM,EACT4E,SAAUZ,GACVa,eAAgB,SAAAC,GAAM,OAAIA,EAAOxL,MACjC+L,UAAQ,EACRlQ,MAAO,CAAEvB,MAAO,KAChBmR,YAAa,SAAAC,GAAM,OAAI5U,EAAAC,EAAAC,cAAC2U,EAAA,EAADjV,OAAAkV,OAAA,GAAeF,EAAf,CAAuBG,MAAM,UAAUC,QAAQ,kBAI1EhV,EAAAC,EAAAC,cAACqU,EAAA,EAAD,CACI3O,GAAG,mBACHsD,KAAK,mBACLxF,QAASkM,EACT4E,SAAUZ,GACVa,eAAgB,SAAAC,GAAM,OAAIA,EAAOxL,MACjCnE,MAAO,CAAEvB,MAAO,KAChBmR,YAAa,SAAAC,GAAM,OAAI5U,EAAAC,EAAAC,cAAC2U,EAAA,EAADjV,OAAAkV,OAAA,GAAeF,EAAf,CAAuBG,MAAM,UAAUC,QAAQ,kBAMlFhV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yCAAb,uBACAH,EAAAC,EAAAC,cAACqU,EAAA,EAAD,CACI3O,GAAG,+BACHsD,KAAK,+BACLxF,QAASoM,EACT0E,SAAU,SAAChB,EAAOlQ,GAAR,OAAkBqQ,GAA2B,sBAAuBH,EAAOlQ,IACrFmR,eAAgB,SAAAC,GAAM,OAAIA,EAAO/G,UACjC5I,MAAO,CAAEvB,MAAO,KAChBmR,YAAa,SAAAC,GAAM,OAAI5U,EAAAC,EAAAC,cAAC2U,EAAA,EAADjV,OAAAkV,OAAA,GAAeF,EAAf,CAAuBG,MAAM,sBAAsBC,QAAQ,kBAK1FhV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yCAAb,qBACAH,EAAAC,EAAAC,cAACqU,EAAA,EAAD,CACI3O,GAAG,6BACHsD,KAAK,6BACLxF,QAASoM,EACT0E,SAAU,SAAChB,EAAOlQ,GAAR,OAAkBqQ,GAA2B,oBAAqBH,EAAOlQ,IACnFmR,eAAgB,SAAAC,GAAM,OAAIA,EAAO/G,UACjC5I,MAAO,CAAEvB,MAAO,KAChBmR,YAAa,SAAAC,GAAM,OAAI5U,EAAAC,EAAAC,cAAC2U,EAAA,EAADjV,OAAAkV,OAAA,GAAeF,EAAf,CAAuBG,MAAM,oBAAoBC,QAAQ,kBAKxFhV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO4E,MAAO,CAACvB,MAAO,UACjCxD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oCAAb,YACAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAjB,uDAAmFH,EAAAC,EAAAC,cAAA,WACnFF,EAAAC,EAAAC,cAAA,SAAOsU,SAzOI,SAAChB,GACpBnB,GAAYmB,EAAM0B,OAAO9Q,QAwOgBA,MAAO4B,GAAUmP,IAAI,IAAIhV,UAAU,wDAAwDI,KAAK,SAAS2I,KAAK,WAAWtD,GAAG,cAIjK5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO4E,MAAO,CAACvB,MAAO,UACjCxD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yCAAb,iBACAH,EAAAC,EAAAC,cAAA,qDACAF,EAAAC,EAAAC,cAAA,SAAOsU,SApPQ,SAAChB,GACxBtB,GAAgBsB,EAAM0B,OAAO9Q,QAmPgB+Q,KAAK,IAAI7O,MAAO8O,cAAcC,MAAM,KAAK,GAAIlV,UAAU,wDAAwDI,KAAK,OAAO2I,KAAK,gBAAgBtD,GAAG,mBAGpK,OAAvB8L,IAA+B1R,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAAb,8EAGhCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO4E,MAAO,CAACvB,MAAO,UACjCxD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yCAAb,oBACAH,EAAAC,EAAAC,cAAA,mEAAiEF,EAAAC,EAAAC,cAAA,WACzC,OAAvBwR,GAA8B1R,EAAAC,EAAAC,cAAA,kFAAmFF,EAAAC,EAAAC,cAAA,oFAA4EwR,GAAmB/D,UACjN3N,EAAAC,EAAAC,cAAA,SAAO+U,SAAiC,OAAvBvD,GAA6B8C,SAlP5B,SAAChB,GAC3BZ,GAAmBY,EAAM0B,OAAO9Q,QAiPuD+Q,IAAK,IAAMG,KAAK,MAAMnV,UAAU,wDAAwDI,KAAK,SAAS2I,KAAK,mBAAmBtD,GAAG,sBAIpN5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO4E,MAAO,CAACvB,MAAO,UACjCxD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yCAAb,gBACAH,EAAAC,EAAAC,cAAA,+DAA6DF,EAAAC,EAAAC,cAAA,WACrC,OAAvBwR,GAA8B1R,EAAAC,EAAAC,cAAA,uEAAwEF,EAAAC,EAAAC,cAAA,yEAAiEwR,GAAmB/D,UAC3L3N,EAAAC,EAAAC,cAAA,SAAO+U,SAAiC,OAAvBvD,GAA6B8C,SA9PhC,SAAChB,GACvBhB,GAAegB,EAAM0B,OAAO9Q,QA6PuD+Q,IAAK,IAAMG,KAAK,MAAMnV,UAAU,wDAAwDI,KAAK,SAAS2I,KAAK,eAAetD,GAAG,kBAG3MwK,EAAY9L,OAAS,GAAKtE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,+CAAyEiQ,GAEnGJ,EAAU1L,OAAS,EAChBtE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACAzN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2CAAb,UAA+D6P,GAC/DhQ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mIAAmII,KAAK,UAASP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAhL,qBAGAqQ,EAAgBxQ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wGAAwGI,KAAK,UAA/H,cAA8JP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wGAAwGI,KAAK,UAA/H,qBHlW9KP,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAO6K,KAAK,+BAA+BC,UIzC5C,SAAmBlM,GAAO,IAAAC,EACPC,oBAAS,GADFC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC9BsO,EAD8BpO,EAAA,GACrBqO,EADqBrO,EAAA,GAAAkM,EAEXnM,mBAAS,IAFEoM,EAAAlM,OAAAC,EAAA,EAAAD,CAAAiM,EAAA,GAE9B2B,EAF8B1B,EAAA,GAEvBmC,EAFuBnC,EAAA,GAAAG,EAIXvM,mBAAS,MAJEwM,EAAAtM,OAAAC,EAAA,EAAAD,CAAAqM,EAAA,GAI9B7D,EAJ8B8D,EAAA,GAIvBqJ,EAJuBrJ,EAAA,GAAAG,EAMT3M,mBAAS,IANA4M,EAAA1M,OAAAC,EAAA,EAAAD,CAAAyM,EAAA,GAM9BgI,EAN8B/H,EAAA,GAMtBkJ,EANsBlJ,EAAA,GAAAG,EAOP/M,mBAAS,MAPFgN,EAAA9M,OAAAC,EAAA,EAAAD,CAAA6M,EAAA,GAOrBgJ,GAPqB/I,EAAA,GAAAA,EAAA,IA8FrC,OArFAzH,oBAAU,WACNkI,EAAIC,IAAI,aAAe5N,EAAMoV,OAAOc,SAASrI,KAAK,SAAAC,GAC9CU,GAAW,GAEXhG,QAAQC,IAAIqF,GACiB,IAAzBA,EAASjK,KAAKiB,OACd2J,EAAS,gCAETsH,EAASjI,EAASjK,KAAK,MAG5BkK,MAAM,SAAA5C,GACL3C,QAAQC,IAAI0C,GACZqD,GAAW,GACXC,EAAStD,EAAIjF,YAElB,IAqECqI,EAEI/N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CAKnBH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACAzN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAd,kBAA6DH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,0BAA0BX,EAAMoV,OAAOc,UACpH1V,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAGH,OAAViI,GACGpI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACAzN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAd,0BAA2DH,EAAAC,EAAAC,cAAA,cAASkI,EAAMxC,KACtE5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qEACXH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,cAAH,KAAmDiI,EAAMvC,SACzD7F,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,QAAH,KAA6CiI,EAAM/B,MACnDrG,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,iBAAH,KAAsDiI,EAAMQ,eAC5D5I,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,gBAAH,KAAqDiI,EAAMO,cAC3D3I,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,YAAH,KAAiDiI,EAAMpC,UACvDhG,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,gBAAH,KAAqDiI,EAAMI,cAC3DxI,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,iBAAH,KAAsDiI,EAAMK,eAC5DzI,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,qBAAH,KAA0DiI,EAAMgM,mBAChEpU,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,uBAAH,KAA4DiI,EAAM+L,sBAG1EnU,EAAAC,EAAAC,cAAA,QAAM6T,SA3EC,SAACP,GACZA,EAAMS,iBACNjM,QAAQC,IAAI,cAAeG,GAE3B4F,GAAW,GACXyH,EAAW,MACXD,EAAU,IACVvH,EAAS,IAGT,IAAI0H,EAAkBvN,EAAMkM,SAAWlM,EAAMxC,GAC7C2P,EAASI,GAETxI,EAAI+G,KAAK,eAAgB9L,GAAOiF,KAAK,SAAAC,GACjCtF,QAAQC,IAAIqF,GACZU,GAAW,QACmB6F,IAA1BvG,EAASjK,KAAKqC,SACd8P,EAAU,sEAEgB3B,IAA1BvG,EAASjK,KAAKuS,UACdJ,EAAU,kDACVC,EAAWnI,EAASjK,KAAKuS,SACzBL,EAASjI,EAASjK,KAAK+E,MAAM,OAGlCmF,MAAM,SAAA5C,GACL3C,QAAQC,IAAI0C,EAAI2C,UAChBW,EAAStD,EAAI2C,SAASjK,KAAKmK,OAC3BL,EAAIC,IAAI,aAAe5N,EAAMoV,OAAOc,SAASrI,KAAK,SAAAC,GAC9CU,GAAW,GAEXhG,QAAQC,IAAIqF,GACiB,IAAzBA,EAASjK,KAAKiB,OACd2J,EAAS,gCAETsH,EAASjI,EAASjK,KAAK,MAG5BkK,MAAM,SAAA5C,GACL3C,QAAQC,IAAI0C,GACZqD,GAAW,GACXC,EAAStD,EAAIjF,cAkCOvF,UAAU,uGAAuG0V,OAAO,IAC5I7V,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAAb,iCAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO4E,MAAO,CAACvB,MAAO,UACjCxD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oCAAb,iBACAH,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAA,SAAOsU,SAAU,SAAChB,GAAD,OAtGN,SAACA,GACxBA,EAAMsC,UACNP,EAAS,SAACQ,GAAD,OAAAnW,OAAAmL,EAAA,EAAAnL,CAAA,GAAqBmW,EAArB,CAAgCnN,cAAiB4K,EAAM0B,OAAO9Q,UAoGhC4R,CAAmBxC,IAAQ2B,KAAK,IAAI7O,MAAO8O,cAAcC,MAAM,KAAK,GAAIjR,MAAOgE,EAAMQ,cAAezI,UAAU,wDAAwDI,KAAK,OAAO2I,KAAK,gBAAgBtD,GAAG,mBAIzO5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO4E,MAAO,CAACvB,MAAO,UACjCxD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oCAAb,YACAH,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,SAAOsU,SAAU,SAAChB,GAAD,OAxGV,SAACA,GACpBA,EAAMsC,UACNP,EAAS,SAACQ,GAAD,OAAAnW,OAAAmL,EAAA,EAAAnL,CAAA,GAAqBmW,EAArB,CAAgC/P,SAAYwN,EAAM0B,OAAO9Q,UAsG3B6R,CAAezC,IAAQpP,MAAOgE,EAAMpC,SAAUmP,IAAI,IAAIhV,UAAU,wDAAwDI,KAAK,SAAS2I,KAAK,WAAWtD,GAAG,cAIxL5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO4E,MAAO,CAACvB,MAAO,UACjCxD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oCAAb,gBACAH,EAAAC,EAAAC,cAAA,+DACAF,EAAAC,EAAAC,cAAA,SAAOsU,SAAU,SAAChB,GAAD,OA1GP,SAACA,GACvBA,EAAMsC,UACNP,EAAS,SAACQ,GAAD,OAAAnW,OAAAmL,EAAA,EAAAnL,CAAA,GAAqBmW,EAArB,CAAgCpN,aAAgB6K,EAAM0B,OAAO9Q,UAwG/B8R,CAAkB1C,IAAQpP,MAAOgE,EAAMO,aAAcwM,IAAK,IAAMG,KAAK,MAAMnV,UAAU,wDAAwDI,KAAK,SAAS2I,KAAK,eAAetD,GAAG,kBAIjN5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO4E,MAAO,CAACvB,MAAO,UACjCxD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oCAAb,oBACAH,EAAAC,EAAAC,cAAA,mEACAF,EAAAC,EAAAC,cAAA,SAAOsU,SAAU,SAAChB,GAAD,OA5GH,SAACA,GAC3BA,EAAMsC,UACNP,EAAS,SAACQ,GAAD,OAAAnW,OAAAmL,EAAA,EAAAnL,CAAA,GAAqBmW,EAArB,CAAgCrN,iBAAoB8K,EAAM0B,OAAO9Q,UA0GnC+R,CAAsB3C,IAAQpP,MAAOgE,EAAMM,iBAAkByM,IAAK,IAAMG,KAAK,MAAMnV,UAAU,wDAAwDI,KAAK,SAAS2I,KAAK,mBAAmBtD,GAAG,sBAG5N4H,EAAMlJ,OAAS,GAAKtE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBqN,GACjD6G,EAAO/P,OAAS,GAAKtE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBkU,GACrDrU,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wGAAwGI,KAAK,SAAS6D,MAAM,sBJjH7IpE,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAO6K,KAAK,mCAAmCC,UKzChD,SAAqBlM,GAAO,IAAAC,EAETC,oBAAS,GAFAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEhCsO,EAFgCpO,EAAA,GAEvBqO,EAFuBrO,EAAA,GAAAkM,EAGTnM,mBAAS,IAHAoM,EAAAlM,OAAAC,EAAA,EAAAD,CAAAiM,EAAA,GAGhC6J,EAHgC5J,EAAA,GAGvBsK,EAHuBtK,EAAA,GAAAG,EAIbvM,mBAAS,IAJIwM,EAAAtM,OAAAC,EAAA,EAAAD,CAAAqM,EAAA,GAIhC7D,EAJgC8D,EAAA,GAIzBqJ,EAJyBrJ,EAAA,GAAAG,EAKb3M,mBAAS,IALI4M,EAAA1M,OAAAC,EAAA,EAAAD,CAAAyM,EAAA,GAKhCmB,EALgClB,EAAA,GAKzB2B,EALyB3B,EAAA,GAAAG,EAMD/M,oBAAS,GANRgN,EAAA9M,OAAAC,EAAA,EAAAD,CAAA6M,EAAA,GAMhC4J,EANgC3J,EAAA,GAMnB4J,EANmB5J,EAAA,GAQvCzH,oBAAU,gBACuB4O,IAAzBrU,EAAMoV,OAAOc,SACba,EAAS/W,EAAMoV,OAAOc,UAE3B,IAEH,IAOMa,EAAW,SAAA3Q,GACbuH,EAAIC,IAAI,aAAexH,GAAIyH,KAAK,SAAAC,GAC5BW,EAAS,IACTD,GAAW,GACXsI,GAAe,GACc,IAAzBhJ,EAASjK,KAAKiB,OACd2J,EAAS,iCAETsH,EAASjI,EAASjK,KAAK,IACvB2E,QAAQC,IAAIqF,MAGjBC,MAAM,SAAA5C,GACL3C,QAAQC,IAAI0C,GACZqD,GAAW,GACXC,EAAStD,EAAIjF,YAoBrB,OACI1F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACCD,EAAMlJ,OAAS,GACZtE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACIzN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kCAAb,SACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBqN,IAIpC6I,GAAerW,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qCAAb,+BAA8EuV,EAA9E,KAChB1V,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAd,kBACAH,EAAAC,EAAAC,cAAA,6DAEa,IAAZ6N,EACD/N,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAO4T,SAxDZ,SAAAC,GACXA,EAAEC,iBACFjG,GAAW,GACXhG,QAAQC,IAAI,iBAAkByN,GAC9Ba,EAASb,KAqDL1V,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qEAAqEqW,QAAQ,YAA9F,YAGAxW,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kHAAkHiE,MAAOsR,EAASlB,SAAU,SAAAR,GAAC,OAAIoC,EAAWpC,EAAEkB,OAAO9Q,QAAOwB,GAAG,WAAWrF,KAAK,OAAOkW,YAAY,qBACnOzW,EAAAC,EAAAC,cAAA,SAAOC,UAAU,0GAA0GI,KAAK,SAAS6D,MAAO2J,EAAU,aAAe,YACnK,GAETA,EAAU/N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CAAiD,GAEzD,IAAjBqN,EAAMlJ,QAAkB8D,aAAiBsO,OAAWL,EAiBnD,GAhBErW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACXH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,YAAH,KAAiDiI,EAAMxC,IACvD5F,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,cAAH,KAAmDiI,EAAMvC,SACzD7F,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,QAAH,KAA6CiI,EAAM/B,MACnDrG,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,iBAAH,KAAsDiI,EAAMQ,eAC5D5I,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,gBAAH,KAAqDiI,EAAMO,cAC3D3I,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,YAAH,KAAiDiI,EAAMpC,UACvDhG,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,gBAAH,KAAqDiI,EAAMI,cAC3DxI,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,iBAAH,KAAsDiI,EAAMK,eAC5DzI,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,qBAAH,KAA0DiI,EAAMgM,mBAChEpU,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,uBAAH,KAA4DiI,EAAM+L,qBAElEnU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACXH,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAtDbwF,EAsD8BwC,EAAMxC,GArDpDoI,GAAW,QACXb,EAAI+G,KAAK,iBACT,CACII,SAAU1O,IACXyH,KAAK,SAAAC,GACJtF,QAAQC,IAAIqF,GACZU,GAAW,GACXsI,GAAe,KAChB/I,MAAM,SAAA5C,GACL3C,QAAQC,IAAI0C,GACZsD,EAAStD,EAAIjF,SACbsI,GAAW,KAZC,IAAApI,GAsDyCzF,UAAU,6FAAvD,gBLpDJH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAO6K,KAAK,sBAAsBC,UMvCnC,WAAqB,IAAAjM,EAEFC,oBAAS,GAFPC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEzBsO,EAFyBpO,EAAA,GAEhBqO,EAFgBrO,EAAA,GAAAkM,EAGMnM,mBAAS,IAHfoM,EAAAlM,OAAAC,EAAA,EAAAD,CAAAiM,EAAA,GAGzB8K,EAHyB7K,EAAA,GAGZ8K,EAHY9K,EAAA,GAAAG,EAIFvM,mBAAS,IAJPwM,EAAAtM,OAAAC,EAAA,EAAAD,CAAAqM,EAAA,GAIzByJ,EAJyBxJ,EAAA,GAIhBkK,EAJgBlK,EAAA,GAAAG,EAMN3M,mBAAS,MANH4M,EAAA1M,OAAAC,EAAA,EAAAD,CAAAyM,EAAA,GAMzBjE,EANyBkE,EAAA,GA8BhC,OA9BgCA,EAAA,GA+B5BtM,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACAzN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAd,gBACAH,EAAAC,EAAAC,cAAA,kEAEAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAO4T,SA3BZ,SAACC,GACZA,EAAEC,iBAEFjG,GAAW,GACXb,EAAIC,IAAI,aAAesI,GAASrI,KAAK,SAAAC,GACjCU,GAAW,GAEXhG,QAAQC,IAAIqF,GACiB,IAAzBA,EAASjK,KAAKiB,OACdsS,EAAe,gCAGfvW,IAAeC,KAAf,UAAAK,OAA8B+U,MAGnCnI,MAAM,SAAA5C,GACL3C,QAAQC,IAAI0C,GACZqD,GAAW,GACX4I,EAAejM,EAAIjF,aAUnB1F,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qEAAqEqW,QAAQ,YAA9F,YAGAxW,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kHAAkHiE,MAAOsR,EAASlB,SAAU,SAACR,GAAD,OAAOoC,EAAWpC,EAAEkB,OAAO9Q,QAAQwB,GAAG,WAAWrF,KAAK,OAAOkW,YAAY,qBAErOE,EAAYrS,OAAS,GAAKtE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,UAAoCwW,GAC/D3W,EAAAC,EAAAC,cAAA,SAAOC,UAAU,0GAA0GI,KAAK,SAAS6D,MAAO2J,EAAU,aAAe,YAIlK,OAAV3F,GACGpI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACXH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,YAAH,KAAiDiI,EAAMxC,IACvD5F,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,cAAH,KAAmDiI,EAAMvC,SACzD7F,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,QAAH,KAA6CiI,EAAM/B,MACnDrG,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,iBAAH,KAAsDiI,EAAMQ,eAC5D5I,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,gBAAH,KAAqDiI,EAAMO,cAC3D3I,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,YAAH,KAAiDiI,EAAMpC,UACvDhG,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,gBAAH,KAAqDiI,EAAMI,cAC3DxI,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,iBAAH,KAAsDiI,EAAMK,eAC5DzI,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,qBAAH,KAA0DiI,EAAMgM,mBAChEpU,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,uBAAH,KAA4DiI,EAAM+L,qBAElEnU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAE,uBAAAF,OAAyByH,EAAMxC,IAAMzF,UAAU,mGAAvD,cNpBJH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAO6K,KAAK,kBAAkBC,UO1C/B,SAAelM,GAAO,IAAAC,EACHC,oBAAS,GADNC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC1BsO,EAD0BpO,EAAA,GACjBqO,EADiBrO,EAAA,GAAAkM,EAEPnM,mBAAS,IAFFoM,EAAAlM,OAAAC,EAAA,EAAAD,CAAAiM,EAAA,GAE1B2B,EAF0B1B,EAAA,GAEnBmC,EAFmBnC,EAAA,GAAAG,EAGPvM,mBAAS,IAHFwM,EAAAtM,OAAAC,EAAA,EAAAD,CAAAqM,EAAA,GAG1B7D,EAH0B8D,EAAA,GAGnBqJ,EAHmBrJ,EAAA,GAyBjC,OApBAjH,oBAAU,WACNkI,EAAIC,IAAI,aAAe5N,EAAMoV,OAAOc,SAASrI,KAAK,SAAAC,GAClB,IAAzBA,EAASjK,KAAKiB,QACb0D,QAAQC,IAAI,QACZsN,EAAS,IACTvH,GAAW,GACXC,EAAS,mCAETjG,QAAQC,IAAIqF,GACZiI,EAASjI,EAASjK,KAAK,IACvB2K,GAAW,GACXC,EAAS,OAEdV,MAAM,SAAA5C,GACL3C,QAAQC,IAAI0C,GACZsD,EAAStD,EAAIjF,SACbsI,GAAW,MAEhB,IAECD,EAEI/N,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACAzN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BAAd,kBAAyDH,EAAAC,EAAAC,cAAA,cAASV,EAAMoV,OAAOc,UAC/E1V,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CAKpBqN,EAAMlJ,OAAS,EAEVtE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACAzN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BAAd,wBAA+DH,EAAAC,EAAAC,cAAA,cAASV,EAAMoV,OAAOc,UACrF1V,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kCAAkCqN,IAKzC,OAAVpF,GAA2C,cAAzB5I,EAAMoV,OAAOc,QAE3B1V,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACAzN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BAAd,wBAA+DH,EAAAC,EAAAC,cAAA,cAASV,EAAMoV,OAAOc,UACrF1V,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kCAAkCqN,IAK/CxN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACIzN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAd,0BAA2DH,EAAAC,EAAAC,cAAA,cAASkI,EAAMxC,KAC1E5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qEACXH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,cAAH,KAAmDiI,EAAMvC,SACzD7F,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,QAAH,KAA6CiI,EAAM/B,MACnDrG,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,iBAAH,KAAsDiI,EAAMQ,eAC5D5I,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,gBAAH,KAAqDiI,EAAMO,cAC3D3I,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,oBAAH,KAAyDiI,EAAMM,kBAC/D1I,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,YAAH,KAAiDiI,EAAMpC,UACvDhG,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,gBAAH,KAAqDiI,EAAMI,cAC3DxI,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,iBAAH,KAAsDiI,EAAMK,eAC5DzI,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,qBAAH,KAA0DiI,EAAMgM,mBAChEpU,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,uBAAH,KAA4DiI,EAAM+L,qBAClEnU,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,mBAAH,KAAwDiI,EAAMyO,iBAE9D7W,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACXH,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAKC,IAAeC,KAAf,uBAAAK,OAA2CyH,EAAMxC,MAAOzF,UAAU,mGAAxF,QACAH,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAKC,IAAeC,KAAf,yBAAAK,OAA6CyH,EAAMxC,MAAOzF,UAAU,6FAA1F,gBPzBRH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAO6K,KAAK,WAAWC,UQ3CxB,WAEX,IAAIoL,EAAWjP,MAASkP,MAAM,OAFAtX,EAIMC,mBAAS,IAJfC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAIvBuX,EAJuBrX,EAAA,GAIXsX,EAJWtX,EAAA,GAM1BuX,EAAQ,CACR,CAAC7Q,KAAMwB,MAASsP,SAAS,EAAE,KAAKpP,OAAO,eACvC,CAAC1B,KAAMwB,MAASsP,SAAS,EAAE,KAAKpP,OAAO,eACvC,CAAC1B,KAAMwB,MAASsP,SAAS,EAAE,KAAKpP,OAAO,eACvC,CAAC1B,KAAMwB,MAASsP,SAAS,EAAE,KAAKpP,OAAO,eACvC,CAAC1B,KAAMwB,MAASsP,SAAS,EAAE,KAAKpP,OAAO,eACvC,CAAC1B,KAAMwB,MAASsP,SAAS,EAAE,KAAKpP,OAAO,eACvC,CAAC1B,KAAMwB,MAASsP,SAAS,EAAE,KAAKpP,OAAO,eACvC,CAAC1B,KAAMwB,MAASsP,SAAS,EAAE,KAAKpP,OAAO,eACvC,CAAC1B,KAAMwB,MAASsP,SAAS,EAAE,KAAKpP,OAAO,eACvC,CAAC1B,KAAMwB,MAASsP,SAAS,GAAG,KAAKpP,OAAO,eACxC,CAAC1B,KAAMwB,MAASsP,SAAS,GAAG,KAAKpP,OAAO,eACxC,CAAC1B,KAAMwB,MAASsP,SAAS,GAAG,KAAKpP,OAAO,eACxC,CAAC1B,KAAMwB,MAASsP,SAAS,GAAG,KAAKpP,OAAO,gBA+B7C,OA5BC9C,oBAAU,WACNC,SAASC,MAAQ,mBAClB,IA2BCnF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACAzN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0FACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAd,kBAA6DH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAC3EH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sDAAhB,2BAA6FH,EAAAC,EAAAC,cAAA,cAAS4W,EAASjO,aAC/G7I,EAAAC,EAAAC,cAAA,kFAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,0DACAH,EAAAC,EAAAC,cAAA,QAAM6T,SA9BH,SAACC,GAEZ,GADAA,EAAEC,iBACiB,KAAf+C,IAKCA,EAAWI,MAFH,sDAEkB,CAE3B,GADmB,IAAI9Q,KAAK0Q,GACT,IAAI1Q,KAEnB,OAGAjG,IAAeC,KAAf,WAAAK,OAA+BqW,MAgBP7W,UAAU,YAAY0V,OAAO,IACjD7V,EAAAC,EAAAC,cAAA,SAAOsU,SAnCE,SAAChB,GACtByD,EAAczD,EAAM0B,OAAO9Q,QAkCoBjE,UAAU,sBAAsBI,KAAK,OAAOkW,YAAY,eAC3FzW,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8DAA8DI,KAAK,UAArF,WAKZP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qCAAd,kBAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wDAEN+W,EAAM/O,IAAI,SAAC9B,EAAMhC,GAAP,OACPrE,EAAAC,EAAAC,cAAA,OAAKqI,IAAKlE,EAAOlE,UAAU,oEACvBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgCkG,EAAKA,MACxC,IAAVhC,EAAcrE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,SAAgCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAQ0H,IAAOxB,EAAKA,MAAMwC,WAqBtF7I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAKC,IAAeC,KAAf,WAAAK,OAA+B0F,EAAKA,QAASlG,UAAU,oFAA7E,2BRrDhBH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAO6K,KAAK,sBAAsBC,US1CnC,SAAgBlM,GAC3B,IAAI6G,EAAOwB,IAAOrI,EAAMoV,OAAOyC,WAAY,cAActP,OAAO,sBAE5DuP,EAAO9X,EAAMoV,OAAOyC,WAAWhC,MAAM,KAAK,GAC1CkC,EAAQ/X,EAAMoV,OAAOyC,WAAWhC,MAAM,KAAK,GAC3CmC,EAAMhY,EAAMoV,OAAOyC,WAAWhC,MAAM,KAAK,GALX5V,EAOJC,oBAAS,GAPLC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAO3BsO,EAP2BpO,EAAA,GAOlBqO,EAPkBrO,EAAA,GAAAkM,EAQRnM,mBAAS,IARDoM,EAAAlM,OAAAC,EAAA,EAAAD,CAAAiM,EAAA,GAQ3B2B,EAR2B1B,EAAA,GAQpBmC,EARoBnC,EAAA,GAAAG,EASEvM,mBAAS,MATXwM,EAAAtM,OAAAC,EAAA,EAAAD,CAAAqM,EAAA,GAS3BwL,EAT2BvL,EAAA,GASfwL,EATexL,EAAA,GA6ClC,OAlCAjH,oBAAU,WACNC,SAASC,MAAT,mBAAAxE,OAAoC2W,EAApC,KAAA3W,OAA4C4W,EAA5C,KAAA5W,OAAqD6W,GACrDrK,EAAIC,IAAJ,gBAAAzM,OAAwB2W,EAAxB,WAAA3W,OAAsC4W,EAAtC,SAAA5W,OAAmD6W,EAAnD,MAA2DnK,KAAK,SAAAC,GACrC,MAApBA,EAAS+G,QACRpG,EAAS,uCACTD,GAAW,KAEX0J,EAAcpK,EAASjK,MACvB2K,GAAW,MAEhBT,MAAM,SAAAC,GACLS,EAAST,EAAM9H,SACfsI,GAAW,GACXhG,QAAQC,IAAIuF,MAGjB,IAkBAA,EAAMlJ,OAAS,EAEVtE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACAzN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BAAd,UACAH,EAAAC,EAAAC,cAAA,SAAIsN,IAKRO,EAEQ/N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CAInBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMyF,GAAG,eAChB5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAiCkG,GAC/CrG,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CACQpD,SAAUlF,EAAAC,EAAAC,cAAC0H,EAAD,CAAavE,KAAMoU,IAC7BE,SAAQ,UAAAhX,OAAY2W,EAAO,IAAMC,EAAQ,IAAMC,EAAvC,QACRzS,MAAO,CACH6S,eAAgB,OAChBlR,QAAS,OACTmR,aAAc,MACd7T,MAAO,QACP1B,gBAAiB,YAEpB,SAAAwV,KAAGC,KAAHD,EAASE,IAAT,IAAcjK,EAAd+J,EAAc/J,QAAd,OAAA+J,EAAuBtK,MACxBO,EAAU,iBAAmB,kBAIzC/N,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,sEACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6CAA6C8X,KAAK,eAA/D,eAAyFjY,EAAAC,EAAAC,cAAA,YAAOuX,EAAWlO,qBACrIvJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6CAA6C8X,KAAK,kBAA/D,kBAA+FjY,EAAAC,EAAAC,cAAA,YAAOuX,EAAWjO,wBAC3IxJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6CAA6C8X,KAAK,mBAA/D,mBAAiGjY,EAAAC,EAAAC,cAAA,YAAOuX,EAAWhO,4BAMzJzJ,EAAAC,EAAAC,cAAA,WAASC,UAAU,QAAQyF,GAAG,cAC1B5F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oCAAd,cACAH,EAAAC,EAAAC,cAAA,iCAECuX,EAAWlO,kBAAoB,GAChCvJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,MACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,gBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,iBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,WACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,YACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,oBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,gBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,cAA4CH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uBAAjB,8BAC5CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,iBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,WACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,aAIRH,EAAAC,EAAAC,cAAA,aACKuX,EAAWvP,eAAeC,IAAI,SAAC+P,EAAe7T,GAAhB,OAC3BrE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAWoI,IAAKlE,GAC1BrE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgC+X,EAActS,IAC5D5F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgC+X,EAAc1P,cAC5DxI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgC+X,EAAczP,eAC5DzI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgC+X,EAAcrS,SAC5D7F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgC+X,EAAcxP,kBAC5D1I,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgC+X,EAAclS,UAC5DhG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgC+X,EAAcvP,cAC5D3I,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgC+X,EAAc/D,oBAA5D,MAAoF+D,EAAc9D,mBAClGpU,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgC+X,EAActP,eAC5D5I,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgC0H,IAAOqQ,EAAc7R,MAAMwC,WACzE7I,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACVH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,gDAAgDU,GAAE,uBAAAF,OAAyBuX,EAActS,KAAzG,QACA5F,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,+CAA+CU,GAAE,yBAAAF,OAA2BuX,EAActS,KAA1G,kBAU5B5F,EAAAC,EAAAC,cAAA,WAASC,UAAU,QAAQyF,GAAG,iBAC1B5F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oCAAd,iBACAH,EAAAC,EAAAC,cAAA,0FAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wDACVsX,EAAW1O,cAAcZ,IAAI,SAACgQ,EAAc9T,GAAf,OAC1BrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uDAAuDoI,IAAKlE,GACvErE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAwBgY,EAAa/P,MAAMxC,IACzD5F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,UAA4BgY,EAAaC,cACzCpY,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,2CAA2CU,GAAE,UAAAF,OAAYwX,EAAa/P,MAAMxC,KAA5F,SAEJ5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACVgY,EAAanP,MAAMb,IAAI,SAACc,EAAMZ,GAAP,OACpBrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOoI,IAAKF,GACvBrI,EAAAC,EAAAC,cAAA,aAAKmI,EAAI,EAAT,KA7HrB,SAACa,GACxB,OAAQA,GACJ,IAAK,mBACD,MAAO,mBACX,IAAK,eACD,MAAO,eACX,IAAK,WACD,MAAO,WACX,IAAK,gBACD,MAAO,gBAEX,QACI,MAAO,QAiH2CC,CAAmBF,EAAKG,mBACtCpJ,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAA6B8I,EAAKI,WAArD,QAA2ErJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCAAgC8I,EAAKK,sBAUhKtJ,EAAAC,EAAAC,cAAA,WAASC,UAAU,QAAQyF,GAAG,kBAC1B5F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oCAAd,kBACAH,EAAAC,EAAAC,cAAA,yDAECuX,EAAWhO,sBAAwB,GACpCzJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,MACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,gBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,iBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,WACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,YACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,oBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,gBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,cAA4CH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uBAAjB,8BAC5CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,iBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,WACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,gBAIRH,EAAAC,EAAAC,cAAA,aACKuX,EAAW3O,eAAeX,IAAI,SAACkQ,EAAehU,GAAhB,OAC3BrE,EAAAC,EAAAC,cAAA,MAAIqI,IAAKlE,EAAOlE,UAAU,YACtBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgCkY,EAAcjQ,MAAMxC,IAClE5F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgCkY,EAAcjQ,MAAMI,cAClExI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgCkY,EAAcjQ,MAAMK,eAClEzI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgCkY,EAAcjQ,MAAMvC,SAClE7F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgCkY,EAAcjQ,MAAMM,kBAClE1I,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgCkY,EAAcjQ,MAAMpC,UAClEhG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgCkY,EAAcjQ,MAAMO,cAClE3I,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgCkY,EAAcjQ,MAAM+L,oBAAlE,MAA0FkE,EAAcjQ,MAAMgM,mBAC9GpU,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgCkY,EAAcjQ,MAAMQ,eAClE5I,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgC0H,IAAOwQ,EAAcjQ,MAAM/B,MAAMwC,WAC/E7I,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAgC0H,IAAOwQ,EAAcC,SAAS,GAAGC,YAAY1P,sBT7JvH7I,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAO6K,KAAK,eAAeC,UU/C5B,WAAuB,IAAAjM,EAEJC,oBAAS,GAFLC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE3BsO,EAF2BpO,EAAA,GAElBqO,EAFkBrO,EAAA,GAAAkM,EAGRnM,mBAAS,IAHDoM,EAAAlM,OAAAC,EAAA,EAAAD,CAAAiM,EAAA,GAG3B2B,EAH2B1B,EAAA,GAGpBmC,EAHoBnC,EAAA,GAAAG,EAKVvM,mBAAS,MALCwM,EAAAtM,OAAAC,EAAA,EAAAD,CAAAqM,EAAA,GAK3B5I,EAL2B6I,EAAA,GAKrBsM,EALqBtM,EAAA,GA0DlC,OAZAjH,oBAAU,WACNkI,EAAIC,IAAI,yBAAyBC,KAAK,SAAAC,GAClCtF,QAAQC,IAAIqF,GACZkL,EAAQlL,EAASjK,KAAKoV,wBACtBzK,GAAW,KACZT,MAAM,SAAAC,GACLxF,QAAQC,IAAIuF,GACZS,EAAST,EAAM9H,SACfsI,GAAW,MAEhB,IAEAR,EAAMlJ,OAAS,EAEVtE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACAzN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BAAd,UACAH,EAAAC,EAAAC,cAAA,SAAIsN,IAKRO,EAEI/N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CAIfH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwN,SAAA,KACAzN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAd,oCACAH,EAAAC,EAAAC,cAAA,2HACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKqF,cAAY,OAAOmT,UAAU,QAAQlT,cAAY,MAAMC,YAAU,qBAAqBtF,UAAU,sFAAsFwY,KAAK,MAAMrT,MAAM,6BAA6B9E,QAAQ,eAAcR,EAAAC,EAAAC,cAAA,QAAMkC,KAAK,eAAe1B,EAAE,oYAC3RV,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,mCAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKqF,cAAY,OAAOmT,UAAU,QAAQlT,cAAY,MAAMC,YAAU,eAAetF,UAAU,kFAAkFwY,KAAK,MAAMrT,MAAM,6BAA6B9E,QAAQ,eAAcR,EAAAC,EAAAC,cAAA,QAAMkC,KAAK,eAAe1B,EAAE,0WACjRV,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,oFAIRH,EAAAC,EAAAC,cAAA,WAASC,UAAU,SACE,IAAhBkD,EAAKiB,QAAgBtE,EAAAC,EAAAC,cAAA,kDACtBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wDACVkD,EAAK8E,IAAI,SAACC,EAAOC,GAAR,OACNrI,EAAAC,EAAAC,cAAA,OAAKqI,IAAKF,EAAKlI,UAAU,oCACrBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAwBiI,EAAMxC,KAEhD5F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAb,WAA2CiI,EAAMwQ,OAAOtU,QACxDtE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAAb,gBAAqDiI,EAAMyQ,kBAC3D7Y,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,8DAA8DU,GAAE,UAAAF,OAAYyH,EAAMxC,KAAlG,eAIJ5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACViI,EAAMwQ,OAAOzQ,IAAI,SAACqF,EAAOsL,GAAR,OACd9Y,EAAAC,EAAAC,cAAA,OAAKqI,IAAKuQ,EAAM3Y,UAAU,QAEtBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACW,SAArBqN,EAAMuL,WACP/Y,EAAAC,EAAAC,cAAA,OAAKqF,cAAY,OAAOmT,UAAU,QAAQlT,cAAY,MAAMC,YAAU,qBAAqBtF,UAAU,sFAAsFwY,KAAK,MAAMrT,MAAM,6BAA6B9E,QAAQ,eAAcR,EAAAC,EAAAC,cAAA,QAAMkC,KAAK,eAAe1B,EAAE,oYAE3RV,EAAAC,EAAAC,cAAA,OAAKqF,cAAY,OAAOmT,UAAU,QAAQlT,cAAY,MAAMC,YAAU,eAAetF,UAAU,kFAAkFwY,KAAK,MAAMrT,MAAM,6BAA6B9E,QAAQ,eAAcR,EAAAC,EAAAC,cAAA,QAAMkC,KAAK,eAAe1B,EAAE,2WAGrRV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,IAA+B2Y,EAAO,EAAtC,KA9GjB,SAAC5P,GACxB,OAAQA,GACJ,IAAK,KACD,MAAO,mBACX,IAAK,KACD,MAAO,eACX,IAAK,KACD,MAAO,WACX,IAAK,gBACD,MAAO,gBAEX,QACI,MAAO,QAkGoEC,CAAmBqE,EAAMwL,sBACpEhZ,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBqN,EAAMyL,kBAEnB,SAArBzL,EAAMuL,WACH/Y,EAAAC,EAAAC,cAAA,QAAM6T,SAAU,SAACP,EAAO5N,GAAR,OAzFvC,SAAC4N,EAAO0F,EAAS3Y,EAAMmV,GAC5ClC,EAAMS,iBACNjM,QAAQC,IAAIuL,EAAM0B,OAAO,GAAG9Q,OAE5B+I,EAAI+G,KAAK,oBAAqB,CAACwB,QAAWA,EAASwD,QAAWA,EAASC,WAAc5Y,EAAM+I,UAAakK,EAAM0B,OAAO,GAAG9Q,QAAQiJ,KAAK,SAAAC,GACjItF,QAAQC,IAAIqF,GACZpD,OAAOkP,SAASC,WACjB9L,MAAM,SAAAC,GACLxF,QAAQC,IAAIuF,GACZS,EAAS,2DAgF6DqL,CAAiB9F,EAAOhG,EAAM5H,GAAI4H,EAAMwL,oBAAqB5Q,EAAMxC,KAAKiQ,OAAO,GAAG1V,UAAU,aACtHH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mEAAmEI,KAAK,SACzFP,EAAAC,EAAAC,cAAA,SAAOC,UAAU,yEAAyEI,KAAK,SAAS6D,MAAM,sBAEhH,KAKQ,SAArBoJ,EAAMuL,YACH/Y,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,SAAqC,SAAjCsN,EAAMuL,WAAWQ,YAAyB,kBAAoB,qBAClEvZ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAOH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,6BAA6BqN,EAAMuL,WAAW1P,WAAlF,QAAwGrJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCAAgCqN,EAAMuL,WAAWzP,YACzKtJ,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAlH9CoZ,EAkH6DhM,EAAMuL,WAAWnT,GAlHnE8P,EAkHuEtN,EAAMxC,GAlHpE6T,EAkHwEjM,EAAMwL,yBAjHjH7L,EAAI+G,KAAJ,sBAAgC,CAACwF,aAAgBF,EAAW9D,QAAWA,EAASyD,WAAcM,IAAQpM,KAAK,SAAAC,GACvGtF,QAAQC,IAAIqF,GACZpD,OAAOkP,SAASC,WACjB9L,MAAM,SAAAC,GACLS,EAAS,uDALC,IAACuL,EAAW9D,EAAS+D,GAkHoGtZ,UAAU,mDAArG,uBAKZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wEV7FvCH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAO6K,KAAK,KAAKC,UWnDlB,WACX,OACI1L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAd,2BACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAb,wEAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,iIAAiIU,GAAG,KAApJ,WACAb,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yHAAyHC,QAAS,kBAAKC,IAAesZ,WAAxK,mBXiDhBzU,SAAS0U,eAAe","file":"static/js/main.4928de90.chunk.js","sourcesContent":["import {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport * as actionCreators from '../actions/actionCreators';\r\n\r\nimport Main from './Main';\r\n\r\n//Import scss\r\nimport \"../styles/main.scss\";\r\n\r\n/*\r\n  Here we specify which state needs to be made available to the component\r\n  our state.posts and state.comments will be available via this.props.posts and this.props.comments\r\n*/\r\n\r\n/**\r\n * Maps the state of the application into a prop for every page which requires the data\r\n * @param {*} state The state of the application we want to put into a prop\r\n */\r\nfunction mapStateToProps(state) {\r\n    return {};\r\n}\r\n\r\n/**\r\n * When you want to dispatch an action you need to access it within the pages, this puts it within a page's props\r\n * @param {*} dispatch Dispatcher which is being loaded into the page props\r\n */\r\nexport function mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(actionCreators, dispatch);\r\n}\r\n\r\n/*\r\n  Here we create an <App/> component which is just our <Main/> component\r\n  with it's props populated with our actions and our state\r\n\r\n  We're injecting the data at the top level and passing it down, but you can connect() any component to make the actions\r\n and the store available to you within the components local scope\r\n*/\r\nlet App = connect(mapStateToProps, mapDispatchToProps)(Main);\r\n\r\nexport default App;\r\n","import React, { useState } from 'react';\r\nimport { Link, browserHistory } from \"react-router\";\r\n\r\nexport default function Main(props) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    return (\r\n        <div className=\"main bg-gray-100 subpixel-antialiased h-screen text-gray-800\">\r\n            <header className=\"bg-brand shadow-lg sm:flex sm:justify-between sm:items-center sm:px-20 sm:py-1\">\r\n                <div className=\"flex items-center justify-between px-4 py-1 sm:p-0\">\r\n                    <div className=\"hover:cursor-pointer\">\r\n                        <h1 onClick={()=> browserHistory.push(\"/\")} className=\"text-white font-bold text-2xl hover:cursor-pointer\"><span className=\"text-blue-400 hover:cursor-pointer\">Group</span> 23</h1>\r\n                    </div>\r\n                    <div className=\"sm:hidden\">\r\n                    <button onClick={()=> setIsOpen(!isOpen)} type=\"button\" className=\"block text-gray-500 hover:text-white focus:text-white focus:outline-none\">\r\n                        <svg className=\"h-6 w-6 fill-current\" viewBox=\"0 0 24 24\">\r\n                            {isOpen === true ? <path fillRule=\"evenodd\" d=\"M18.278 16.864a1 1 0 0 1-1.414 1.414l-4.829-4.828-4.828 4.828a1 1 0 0 1-1.414-1.414l4.828-4.829-4.828-4.828a1 1 0 0 1 1.414-1.414l4.829 4.828 4.828-4.828a1 1 0 1 1 1.414 1.414l-4.828 4.829 4.828 4.828z\"/> : \"\"}\r\n                            {isOpen === false ? <path fillRule=\"evenodd\" d=\"M4 5h16a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2z\"/> : \"\" }\r\n                        </svg>\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n                <nav className={`${isOpen ? 'block' : 'hidden'} px-2 pt-2 pb-4 sm:flex sm:p-0`}>\r\n                    <Link onClick={()=> setIsOpen(false)} to=\"/\" className=\"block px-3 py-2 text-white font-semibold rounded hover:bg-gray-800\">Home</Link>\r\n                    <Link onClick={()=> setIsOpen(false)} to=\"/trading\" className=\"mt-1 block px-3 py-2 text-white font-semibold rounded hover:bg-gray-800 sm:mt-0 sm:ml-6\">Trading</Link>\r\n                    <Link onClick={()=> setIsOpen(false)} to=\"/reports\" className=\"mt-1 block px-3 py-2 text-white font-semibold rounded hover:bg-gray-800 sm:mt-0 sm:ml-6\">Reports</Link>\r\n                    <Link onClick={()=> setIsOpen(false)} to=\"/corrections\" className=\"mt-1 block px-3 py-2 text-white font-semibold rounded hover:bg-gray-800 sm:mt-0 sm:ml-6\">Errors / Corrections</Link>\r\n                </nav>\r\n            </header>\r\n            <div className=\"content container mx-auto mt-6 flex flex-col align-center md:justify-start text-gray-800\">\r\n                {/* We use cloneElement here so we can auto pass down props to other components within the tree. */}\r\n                {React.cloneElement(props.children, props)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\n\r\n//The URL for the API which is the standard part, all endpoints are additions to this API\r\n//const LOCAL_TESTING = \"http://localhost:6789\"\r\nconst API_BASE_URL = \"https://group23.dcs.warwick.ac.uk/api/\"\r\n\r\n//Request/response default settings\r\nlet config = {\r\n    baseURL: API_BASE_URL,\r\n    timeout: 10000,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n};\r\n\r\n//Create a new instance of the axios library using these settings configured.\r\nlet instance = axios.create(config)\r\nexport default instance;","import React from \"react\";\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nexport default function CurrencyLineDepreciation(props) {\r\n    //Handle the data, make it suitable to be presented.\r\n    const lineData = {\r\n        labels: [props.day_one, props.day_two, props.day_three, props.day_four, props.day_five, props.day_six, props.day_seven],\r\n        datasets: [\r\n          {\r\n            //label: props.data.currency + \" Change (\" + props.day_one + \"-\" + props.day_seven + \")\",\r\n            fill: true,\r\n            lineTension: 0.1,\r\n            backgroundColor: 'rgba(209, 19, 25,0.4)',\r\n            borderColor: 'rgba(209, 19, 25)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(237, 81, 86)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 3,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 3,\r\n            pointHitRadius: 10,\r\n            data: props.data.values\r\n          }\r\n        ]\r\n    };\r\n\r\n    var lineOptions = {\r\n        legend: {\r\n            display: false\r\n        },\r\n        scales: {\r\n            xAxes: [{\r\n                gridLines: {\r\n                    display: false,\r\n                    color: \"rgba(0, 0, 0, 0)\",\r\n                },\r\n                ticks: {\r\n                    display: false,\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0)\",\r\n                },\r\n                ticks: {\r\n                    //Only include the first and last ticks\r\n                    callback: function(value, index, values) {\r\n                        if (index === 0 || index === values.length - 1) {\r\n                            return value;\r\n                        } else {\r\n                            return \"\";\r\n                        }\r\n                    }\r\n                }   \r\n            }]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-container\">\r\n            <Line \r\n                width={300}\r\n                height={80}\r\n                options={lineOptions} \r\n                data={lineData} \r\n            />\r\n        </div>\r\n        \r\n    )\r\n}","import React from \"react\";\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nexport default function CurrencyLineAppreciation(props) {\r\n    //Handle the data, make it suitable to be presented.\r\n    const lineData = {\r\n        labels: [props.day_one, props.day_two, props.day_three, props.day_four, props.day_five, props.day_six, props.day_seven],\r\n        datasets: [\r\n          {\r\n            //label: props.data.currency + \" Change (\" + props.day_one + \"-\" + props.day_seven + \")\",\r\n            fill: true,\r\n            lineTension: 0.1,\r\n            backgroundColor: 'rgba(75,192,192,0.4)',\r\n            borderColor: 'rgba(75,192,192,1)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(75,192,192,1)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 3,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 3,\r\n            pointHitRadius: 10,\r\n            data: props.data.values\r\n          }\r\n        ]\r\n    };\r\n\r\n    var lineOptions = {\r\n        legend: {\r\n            display: false\r\n        },\r\n        scales: {\r\n            xAxes: [{\r\n                gridLines: {\r\n                    display: false,\r\n                    color: \"rgba(0, 0, 0, 0)\",\r\n                },\r\n                ticks: {\r\n                    display: false,\r\n                }\r\n            }],\r\n            yAxes: [{\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0)\",\r\n                },\r\n                ticks: {\r\n                    //Only include the first and last ticks\r\n                    callback: function(value, index, values) {\r\n                        if (index === 0 || index === values.length - 1) {\r\n                            return value;\r\n                        } else {\r\n                            return \"\";\r\n                        }\r\n                    }\r\n                }   \r\n            }]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-container\">\r\n            <Line \r\n                width={300}\r\n                height={80}\r\n                options={lineOptions} \r\n                data={lineData} \r\n            />\r\n        </div>\r\n        \r\n    )\r\n}","import React from \"react\";\r\nimport {Doughnut} from 'react-chartjs-2';\r\n\r\nexport default function ActionsDonut(props) {\r\n    const data = {\r\n        labels: [\r\n            'Creations',\r\n            'Edits',\r\n            'Deletions',\r\n            \"Erroneous Trade Attributes\",\r\n            \"Corrections\"\r\n        ],\r\n        datasets: [{\r\n            data: [props.data.creation_count, props.data.edit_count, props.data.delete_count, props.data.erroneous_fields, props.data.corrections],\r\n            backgroundColor: [\r\n            \"rgba(30, 199, 44, 0.85)\",\r\n            'rgba(240, 192, 36, 0.85)',\r\n            'rgba(209, 72, 54, 0.85)',\r\n            'rgba(66, 99, 245, 0.85)',\r\n            'rgba(209, 66, 245, 0.85)'\r\n            ],\r\n            hoverBackgroundColor: [\r\n            '#1ec72c',\r\n            '#f0c024',\r\n            '#d14836',\r\n            '#4263f5',\r\n            '#d142f5'\r\n            ]\r\n        }]\r\n    };\r\n\r\n    var donutOptions = {\r\n        legend: {\r\n            display: false\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"donut-container flex justify-start\" style={{width: \"100%\"}}>\r\n            <Doughnut \r\n                data={data}\r\n                options={donutOptions}\r\n            />\r\n        </div> \r\n    )\r\n}","//Component representing the buttons which have CRUD operations for trades.\r\nimport React, { useEffect } from \"react\";\r\nimport { browserHistory } from \"react-router\";\r\n\r\nexport default function Action(props) {\r\n\r\n    useEffect(()=> {\r\n        document.title = \"Trading - CS261 Group 23\";\r\n    });\r\n    \r\n    return (\r\n        <div className=\"bg-white w-11/12 md:w-2/5 md:mt-2 lg:mt-0 lg:w-3/12 mt-4 md:mt-0 px-4 py-4 justify-top flex shadow-md rounded-lg cursor-pointer hover:shadow-lg\" onClick={()=> browserHistory.push(props.linkTo)}>\r\n            <div className=\"icon mt-1\">\r\n                {props.icon === \"create\" ? <svg width=\"22\" height=\"22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M11 .34375C5.11328.34375.34375 5.11328.34375 11c0 5.8867 4.76953 10.6562 10.65625 10.6562 5.8867 0 10.6562-4.7695 10.6562-10.6562C21.6562 5.11328 16.8867.34375 11 .34375zm6.1875 11.85935c0 .2836-.232.5157-.5156.5157h-3.9531v3.9531c0 .2836-.2321.5156-.5157.5156H9.79688c-.2836 0-.51563-.232-.51563-.5156v-3.9531H5.32812c-.28359 0-.51562-.2321-.51562-.5157V9.79688c0-.2836.23203-.51563.51562-.51563h3.95313V5.32812c0-.28359.23203-.51562.51563-.51562h2.40622c.2836 0 .5157.23203.5157.51562v3.95313h3.9531c.2836 0 .5156.23203.5156.51563v2.40622z\" fill=\"#3A456E\"/></svg> : \"\"}\r\n                {props.icon === \"find\" ?  <svg width=\"22\" height=\"22\" className=\"fill-current text-brand\" aria-hidden=\"true\" data-prefix=\"fas\" data-icon=\"search\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"/></svg> : \"\"}\r\n                {props.icon === \"delete\" ? <i className=\"fas fa-trash-alt fill-current text-brand text-xl\"></i> : \"\"}\r\n            </div>\r\n            <div className=\"text ml-4\">\r\n                <h3 className=\"text-brand font-semibold text-lg\">{props.title}</h3>\r\n                <p>{props.message} <svg className=\"inline-block fill-current text-gray-800 w-4 h-4\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\"><path className=\"heroicon-ui\" d=\"M18.59 13H3a1 1 0 0 1 0-2h15.59l-5.3-5.3a1 1 0 1 1 1.42-1.4l7 7a1 1 0 0 1 0 1.4l-7 7a1 1 0 0 1-1.42-1.4l5.3-5.3z\"/></svg></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { browserHistory } from \"react-router\";\r\n\r\nexport default function Trade(props) {\r\n    //Risk is either: none, low, medium, high\r\n    //Which maps to the colours: bg-gray-600, bg-green-700, bg-yellow-500, bg-red-790\r\n    // const [riskCategory, setRiskCategory] = useState(\"bg-gray-600\");\r\n\r\n    // useEffect(()=> {\r\n    //     if (props.risk === 0) {\r\n    //         setRiskCategory(\"bg-gray-600\");\r\n    //     } else if (props.risk > 0 && props.risk <= 33) {\r\n    //         setRiskCategory(\"bg-green-700\");\r\n    //     } else if (props.risk > 33 && props.risk <= 66) {\r\n    //         setRiskCategory(\"bg-yellow-500\");\r\n    //     } else if (props.risk > 66) {\r\n    //         setRiskCategory(\"bg-red-700\");\r\n    //     }\r\n    // });\r\n\r\n    return (\r\n        <div onClick={()=> browserHistory.push(\"/trade/\" + props.id)} className=\"w-full h-full mt-4 pb-1 overflow-hidden \">\r\n            <div className=\"cursor-pointer hover:shadow-md relative bg-white shadow rounded-lg p-4 overflow-hidden\">\r\n            {/* <div className={\"absolute risk-ribbon w-4 h-8 \" + riskCategory}></div> */}\r\n            <div className=\"w-auto h-auto flex justify-between\">\r\n                <div className=\"flex flex-col flex-grow-0 overflow-hidden\">\r\n                    <h3 className=\"flex flex-col\">\r\n                        {props.product === \"Stocks\" ?  \r\n                            <span className=\"text-brand font-bold tracking-wide \">{props.product} \r\n                                <span className=\"font-light text-xs\">\r\n                                    ({props.selling_company})\r\n                                </span>\r\n                            </span> :\r\n                            <span className=\"text-brand font-bold tracking-wide\">\r\n                                {props.product}\r\n                            </span>\r\n                        }\r\n                        <span className=\"text-gray-600 text-sm uppercase font-semibold\">{props.strikePrice} x {props.quantity}</span>\r\n                    </h3>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                    <div className=\"leading-none flex\">\r\n                        <div className=\"flex flex-col text-center mr-2\">\r\n                            <p className=\"text-green-700\">Buyer</p>\r\n                            <p>{props.buying_company}</p>\r\n                        </div>\r\n                        <div className=\"flex flex-col text-center ml-2\">\r\n                            <p className=\"text-red-600\">Seller</p>\r\n                            <p>{props.selling_company}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex items-center\">\r\n                    <p className=\"text-white text-xs bg-gray-500 rounded px-4 py-1 uppercase font-semibold\">{props.maturityDate}</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router\"\r\n\r\n//API Import\r\nimport api from \"../../api\";\r\n\r\n//Components\r\nimport Action from \"./Action\";\r\nimport Trade from \"./Trade\";\r\n\r\n\r\nconst months = [\"Jan\", \"Feb\" , \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\r\nlet date = new Date()\r\n\r\nexport default function Trading() {\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const [trades, setTrades] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        console.log(\"getting company data\");\r\n        api.get(\"/trade/recent?page_number=1\").then(response => {\r\n            console.log(response);\r\n            setError(\"\");\r\n            setLoading(false);\r\n            setTrades(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n            setError(err.message);\r\n            setLoading(false);\r\n        });\r\n        \r\n    }, []);\r\n\r\n    if (error.length > 0) {\r\n        return (\r\n            <>\r\n            <div className=\"px-4 md:px-0\">\r\n                <div className=\"flex items-center\">\r\n                    <h1 className=\"text-brand font-bold text-2xl\">Trades &bull; \r\n                    <span className=\"ml-2 text-gray-500 font-normal text-base uppercase tracking-tight\"> {date.getDate()} {months[date.getMonth()]} {date.getFullYear()}, {days[date.getDay()]} - {date.getHours()}:{String(date.getMinutes()).padStart(2, \"0\")}</span></h1>\r\n                </div>\r\n                <p>View, manage and act on trade information</p>\r\n            </div>\r\n            \r\n            <div className=\"mt-6 flex flex-wrap justify-center md:justify-between w-auto\">\r\n                <Action title=\"Create a Trade\" message=\"Insert a new trade’s data into the system manually\" linkTo=\"/trading/create-trade\" icon=\"create\" />\r\n                <Action title=\"Edit a Trade\" message=\"Update a trade that already exists to it’s new values\" linkTo=\"/trading/edit-trade\" icon=\"edit\" />\r\n                <Action title=\"Delete a Trade\" message=\"Delete an already existing trade from the system\" linkTo=\"/trading/delete-trade\" icon=\"delete\" />\r\n            </div>\r\n\r\n            <h5 className=\"text-red-700\">{error}</h5>\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"px-4 md:px-0\">\r\n            <div className=\"flex items-center\">\r\n                <h1 className=\"text-brand font-bold text-2xl\">Trades &bull; \r\n                <span className=\"ml-2 text-gray-500 font-normal text-base uppercase tracking-tight\"> {date.getDate()} {months[date.getMonth()]} {date.getFullYear()}, {days[date.getDay()]} - {date.getHours()}:{String(date.getMinutes()).padStart(2, \"0\")}</span></h1>\r\n            </div>\r\n            <p>View, manage and act on trade information</p>\r\n        </div>\r\n        \r\n        <div className=\"mt-6 flex flex-wrap justify-center md:justify-between w-auto\">\r\n            <Action title=\"Create a Trade\" message=\"Insert a new trade’s data into the system manually\" linkTo=\"/trading/create-trade\" icon=\"create\" />\r\n            <Action title=\"Find a Trade\" message=\"Find a trade in the system to view, edit or delete\" linkTo=\"/trading/find-trade\" icon=\"find\" />\r\n            <Action title=\"Delete a Trade\" message=\"Delete an already existing trade from the system\" linkTo=\"/trading/delete-trade\" icon=\"delete\" />\r\n        </div>\r\n        \r\n        <div className=\"trades mt-16 mx-4\">\r\n            <div className=\"w-full flex justify-between items-baseline\">\r\n                <h3 className=\"text-brand font-bold text-lg mb-1\">Trades <span className=\"block text-gray-500 text-sm font-normal\">Ordered by: recent</span></h3>\r\n                <Link to=\"/trading/all\" className=\"px-2 py-1 bg-brand rounded text-white uppercase font-semibold leading-normal text-xs hover:text-gray-300 hover:bg-indigo-700 cursor-pointer\">View more</Link>\r\n            </div>\r\n            \r\n            {loading ? <div className=\"h-32 w-32 mx-auto spinner text-center\"></div> :\r\n\r\n            trades.length === 0 ? <p className=\"text-center text-brand font-semibold text-lg\">No trades are in the system.</p> :\r\n            <div className=\"grid grid-cols-1 gap-3 md:grid-cols-2\">\r\n                {trades.map((trade, i) => (\r\n                    <Trade\r\n                        key={i}\r\n                        risk={Math.floor(Math.random() * 100) + 1}\r\n                        id={trade.id}\r\n                        type={trade.product_id}\r\n                        product={trade.product} \r\n                        buying_company_id={trade.buying_party} \r\n                        selling_company_id={trade.selling_party}\r\n                        buying_company={trade.buying_company} \r\n                        selling_company={trade.selling_company} \r\n                        quantity={trade.quantity} \r\n                        strikePrice={trade.strike_price}\r\n                        maturityDate={trade.maturity_date}\r\n                    />\r\n                ))}\r\n            </div>\r\n            }\r\n        </div>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport {\r\n    Page,\r\n    Text,\r\n    View,\r\n    Document,\r\n    StyleSheet,\r\n  } from \"@react-pdf/renderer\";\r\nimport moment from \"moment\";\r\n\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        backgroundColor: \"#ffffff\",\r\n        padding: 12,\r\n        fontSize: 16\r\n    },\r\n    title: {\r\n        color: \"#3A456E\",\r\n        fontWeight: 700,\r\n        fontSize: 22,\r\n        textAlign: \"center\",\r\n        marginTop: 12\r\n    },\r\n    infoRow: {\r\n        marginTop: 20,\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        fontSize: 16\r\n    },\r\n    section: {\r\n        marginTop: 24,\r\n    },\r\n    sectionTitle: {\r\n        color: \"#3A456E\",\r\n        fontSize: 20,\r\n        fontWeight: 500\r\n    },\r\n    bottomMargin: {\r\n        marginBottom: 16\r\n    },\r\n    padLeft: {\r\n        paddingLeft: 32\r\n    },\r\n    red: {\r\n        color: \"red\"\r\n    },\r\n    green: {\r\n        color: \"green\"\r\n    },\r\n    borderingSide: {\r\n        borderRight: \"1px solid black\"\r\n    }\r\n});\r\n\r\nexport default function PDFDocument(props) {\r\n    let date = moment(props.data.created, \"YYYY-MM-DDTHH:mm:ss.SSSSZ\").format(\"dddd, MMMM Do YYYY\")\r\n    console.log(\"PDF Data: \", props.data)\r\n\r\n    const prettyifyAttribute = (name) => {\r\n        switch (name) {\r\n            case 'underlying_price':\r\n                return \"Underlying Price\"\r\n            case 'strike_price':\r\n                return \"Strike Price\"\r\n            case 'quantity':\r\n                return \"Quantity\"\r\n            case 'maturity_date':\r\n                return \"Maturity Date\"\r\n        \r\n            default:\r\n                return \"None\"\r\n        }\r\n    }\r\n\r\n    var created_trades = props.data.created_trades.map(function(trade, idx){\r\n        return (\r\n            <View key={idx}>\r\n                <Text>• {trade.id}</Text>\r\n                <Text style={styles.padLeft}>Buying Company: {trade.buying_party}</Text>\r\n                <Text style={styles.padLeft}>Selling Company: {trade.selling_party}</Text>\r\n                <Text style={styles.padLeft}>Product: {trade.product}</Text>\r\n                <Text style={styles.padLeft}>Quantity: {trade.quantity}</Text>\r\n                <Text style={styles.padLeft}>Underlying Price: {trade.underlying_price}</Text>\r\n                <Text style={styles.padLeft}>Strike Price: {trade.strike_price}</Text>\r\n                <Text style={styles.padLeft}>Maturity Date: {trade.maturity_date}</Text>\r\n                <Text style={styles.padLeft}>Created: {moment(trade.created).fromNow()}</Text>\r\n            </View>\r\n            \r\n        );\r\n    });\r\n\r\n    var deleted_trades = props.data.deleted_trades.map(function(trade, idx){\r\n        return (<Text  key={idx}>• {trade.trade.id}</Text>);\r\n    });\r\n\r\n    var edited_trades = props.data.edited_trades.map(function(trade, idx){\r\n        return (\r\n            <View key={idx}>\r\n                <Text>• {trade.trade.id}</Text>\r\n                {trade.edits.map(function(edit, idx) {\r\n                    return (<Text key={idx} style={styles.padLeft}><Text style={styles.borderingSide}>{prettyifyAttribute(edit.attribute_edited)}</Text>  <Text style={styles.red}>{edit.old_value}</Text> -->  <Text style={styles.green}>{edit.new_value}</Text></Text>)\r\n                })}\r\n            </View>\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n        <Document>\r\n            <Page style={styles.page}>\r\n                <Text style={styles.title}>{date}</Text>\r\n                <View style={styles.infoRow}>\r\n                    <Text>New Trades: {props.data.num_of_new_trades}</Text>\r\n                    <Text >Edited Trades: {props.data.num_of_edited_trades}</Text>\r\n                    <Text>Deleted Trades: {props.data.num_of_deleted_trades}</Text>\r\n                </View>\r\n\r\n                <View style={styles.section}>\r\n                    <Text style={styles.sectionTitle}>New Trades</Text>\r\n                    <Text style={styles.bottomMargin}>New trades entered into the system today</Text>\r\n\r\n                    {created_trades}\r\n                    \r\n                </View>\r\n                    \r\n\r\n                <View style={styles.section}>\r\n                    <Text style={styles.sectionTitle}>Edited Trades</Text>\r\n                    <Text style={styles.bottomMargin}>Trades which have had their attributes edited today</Text>\r\n\r\n                    {edited_trades}\r\n                </View>\r\n\r\n                <View style={styles.section}>\r\n                    <Text style={styles.sectionTitle}>Deleted Trades</Text>\r\n                    <Text style={styles.bottomMargin}>Trades which have been deleted today</Text>\r\n\r\n                    {deleted_trades}\r\n                </View>\r\n\r\n            </Page>\r\n        </Document>\r\n    );\r\n}","import {combineReducers} from 'redux';\r\n//Stores the state information for the browser history\r\nimport {routerReducer} from 'react-router-redux'; \r\n\r\n/*\r\n * Reducers handle an action and create a new state, replacing the old.\r\n * As redux state is immutable the need for reducers is ever more present.\r\n */\r\n    \r\n\r\n/*\r\n *  Reducersa must be combined into a singular reducer before they can be used in the application, this is done below.\r\n *   An example of multiple reducers combined is provided below, you must import the reducer first.\r\n *   EXAMPLE: const rootReducer = combineReducers({routing: routerReducer, userState, userReducer});\r\n */\r\nconst rootReducer = combineReducers({routing: routerReducer});\r\n\r\nexport default rootReducer;","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport {syncHistoryWithStore} from 'react-router-redux';\r\nimport {browserHistory} from 'react-router'\r\nimport rootReducer from './reducers/index';\r\nimport thunk from \"redux-thunk\";\r\nimport throttle from 'lodash/throttle';\r\n\r\n//Local storage functions to save/load the application state to and from localStorage\r\nimport {loadState, saveState} from \"./localStorage\";\r\n\r\n\r\n//In development it's useful to have some debugging for the state, this enables that\r\nconst enhancers = compose(applyMiddleware(thunk), window.devToolsExtension ? window.devToolsExtension() : f => f);\r\n\r\n//The starting state of a user if they have no locally saved state, this is defined as development progresses\r\nconst initialState = {\r\n};\r\n\r\nconst persistedState = loadState();\r\n\r\n//const store = createStore(rootReducer, persistedState, enhancers);\r\nconst store = createStore(rootReducer, {...initialState, ...persistedState}, enhancers);\r\n\r\n//we export history because we need it in `index.js` to feed into <Router>\r\nexport const history = syncHistoryWithStore(browserHistory, store);\r\n\r\n\r\n//Enable Hot Reloading for the reducers, We re-require() the reducers whenever any new code has been written. \r\n//Webpack handles most of the reloading stuff for us.\r\nif (module.hot) {\r\n    module.hot.accept('./reducers/', () => {\r\n        const nextRootReducer = require('./reducers/index').default;\r\n        store.replaceReducer(nextRootReducer);\r\n    });\r\n}\r\n\r\n//Interval (in milliseconds) that the application state is stored to the localStorage\r\nconst stateRefreshLength = 1000;\r\n\r\nstore.subscribe(throttle(() => {\r\n    //const state = store.getState();\r\n    let stateToSave = {\r\n        //You can construct the state in here which you want to save in the format you desire.\r\n    }\r\n    saveState(stateToSave);\r\n}, stateRefreshLength));\r\n\r\nexport default store;\r\n","\r\nconst localStorageName = \"cs261group23\";\r\n\r\n/**\r\n * Load the local storage state into the application state.\r\n * \r\n * @return {undefined} Returns undefined if the state could not be loaded, otherwise it loads the state.\r\n */\r\nexport const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem(localStorageName);\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        console.log(err);\r\n        return undefined;\r\n    }\r\n}\r\n\r\n/**\r\n * Saves the current application state to the local storage state\r\n * @param {JSON} state The current application state\r\n */\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem(localStorageName, serializedState);\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {Router, Route, IndexRoute} from 'react-router'\r\n\r\n//CSS Import\r\nimport './styles/tailwind.css';\r\n\r\n//Page container imports\r\nimport App from './containers/App.js';\r\nimport Home from \"./containers/Home/Home.js\";\r\n\r\nimport Trading from \"./containers/Trading/Trading.js\";\r\nimport TradingAll from \"./containers/Trading/TradingAll.js\";\r\n//Trading forms, create, edit, delete\r\nimport CreateTrade from \"./containers/Trading/Forms/CreateTrade.js\";\r\nimport EditTrade from './containers/Trading/Forms/EditTrade';\r\nimport DeleteTrade from './containers/Trading/Forms/DeleteTrade';\r\nimport FindTrade from \"./containers/Trading/Forms/FindTrade\";\r\n\r\nimport Trade from \"./containers/Trade/Trade\";\r\n\r\n\r\n//Reports page\r\nimport Reports from \"./containers/Reports/Reports.js\";\r\nimport Report from \"./containers/Reports/Report.js\";\r\n\r\nimport FourOFour from \"./containers/FourOFour\";\r\n\r\n//Load state and browser history so we can use it in react-router\r\nimport store, {history} from './store';\r\n\r\nimport Corrections from './containers/Corrections/Corrections';\r\n\r\n\r\n//render the react app, in the structure provided by react-router into the index.html root element\r\nrender(\r\n    <Provider store={store}>\r\n        <Router history={history}>\r\n            <Route path=\"/\" component={App}>\r\n                <IndexRoute component={Home} />\r\n                <Route path=\"/trading\" component={Trading} />\r\n                <Route path=\"/trading/all\" component={TradingAll} />\r\n                <Route path=\"/trading/create-trade\" component={CreateTrade} />\r\n                <Route path=\"/trading/edit-trade/:tradeID\" component={EditTrade} />\r\n                <Route path=\"/trading/delete-trade/(:tradeID)\" component={DeleteTrade} />\r\n                <Route path=\"/trading/find-trade\" component={FindTrade} />\r\n                <Route path=\"/trade/:tradeID\" component={Trade} />\r\n\r\n                <Route path=\"/reports\" component={Reports} />\r\n                <Route path=\"/report/:reportDate\" component={Report} />\r\n\r\n                <Route path=\"/corrections\" component={Corrections} />\r\n\r\n                <Route path=\"/*\" component={FourOFour} />\r\n            </Route>\r\n\r\n            \r\n        </Router>\r\n    </Provider>,\r\ndocument.getElementById('root'));\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport api from \"../../api\";\r\nimport CurrencyLineDepreciation from './CurrencyLineDepreciation';\r\nimport CurrencyLineAppreciation from './CurrencyLineAppreciation';\r\nimport ActionsDonut from \"./ActionsDonut\";\r\n\r\nexport default function Home() {\r\n    const [changeData, setChangeData] = useState(null)\r\n    const [changeLoading, setChangeLoading] = useState(true)\r\n    const [changeError, setChangeError] = useState(\"\")\r\n\r\n    const [actionsData, setActionsData] = useState(null)\r\n    const [actionsLoading, setActionsLoading] = useState(true)\r\n    const [actionsError, setActionsError] = useState(\"\")\r\n\r\n    useEffect(()=> {\r\n        document.title = \"Home - CS261 Group 23\";\r\n        getChangeData()\r\n        getActionsToday()\r\n    }, []);\r\n\r\n    const getChangeData = () => {\r\n        setChangeLoading(true)\r\n        api.get(\"/currency/report/changes\").then(response => {\r\n            setChangeData(response.data)\r\n            setChangeLoading(false)\r\n        }).catch(error => {\r\n            setChangeError(\"Error collecting data, try refreshing the page\")\r\n            setChangeLoading(false)\r\n        })\r\n    }\r\n\r\n    const getActionsToday = () => {\r\n        setActionsLoading(true)\r\n        api.get(\"/report/actions/today\").then(response => {\r\n            setActionsData(response.data)\r\n            setActionsLoading(false)\r\n        }).catch(error => {\r\n            setActionsError(\"Error getting actions data for today\")\r\n            setActionsLoading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"px-4 md:px-0\">\r\n                <h1 className=\"text-brand font-bold text-2xl\">Home</h1> \r\n                <p className=\"\">Welcome to the Group 23 Derivative Trade Manager</p>\r\n                <p>Below is some statistics about the information in the system to help you make educated decisions when trading</p>\r\n            </div>\r\n\r\n            <section id=\"most-apprecciatied\" className=\"mt-16 mb-2 p-3\">\r\n                <h3 className=\"text-brand text-lg lg:text-xl font-bold\">\r\n                    Most Appreciated Currencies\r\n                    <br className=\"block lg:hidden\" /> <span className=\"lg:pl-2 text-gray-500 text-xs\">(Past week)</span>\r\n                    <p className=\"font-normal text-sm font-gray-600\">The currencies which have seen the most increase in value this week (against the dollar)</p>\r\n                </h3>\r\n\r\n                {changeError.length > 0 ? <p className=\"text-red-700\">{changeError}</p> :\r\n                changeLoading ? <div className=\"h-24 w-24 mx-auto spinner text-center\"></div> :\r\n                <div className=\"mt-6 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\r\n                    {changeData.largest_appreciations.map((currency, i) => (\r\n                        <div key={i} className=\"flex flex-col items-center bg-white p-2 rounded\">\r\n                            <p className=\"flex jusitfy-center text-center\">\r\n                                <span className=\"mb-2 font-bold text-lg text-center\">{currency.currency}</span>\r\n                                <span className=\"py-1 pl-2 text-green-500 font-bold\">+ <span className=\"font-normal\"></span>{currency.change}</span>\r\n                            </p>\r\n                            \r\n                            <CurrencyLineAppreciation\r\n                                key={i}\r\n                                className=\"w-full h-full\" \r\n                                data={currency} \r\n                                day_one={changeData.day_one}\r\n                                day_two={changeData.day_two}\r\n                                day_three={changeData.day_three}\r\n                                day_four={changeData.day_four}\r\n                                day_five={changeData.day_five}\r\n                                day_six={changeData.day_six}\r\n                                day_seven={changeData.day_seven}\r\n                            />\r\n                        </div>\r\n                        \r\n                    ))}\r\n                </div>\r\n                \r\n                }\r\n            </section>\r\n\r\n            <section id=\"most-depreciated\" className=\"mt-16 mb-2 p-3\">\r\n                <h3 className=\"text-brand text-lg lg:text-xl font-bold\">\r\n                    Most Depreciated Currencies\r\n                    <br className=\"block lg:hidden\" /> <span className=\"lg:pl-2 text-gray-500 text-xs\">(Past week)</span>\r\n                    <p className=\"font-normal text-sm font-gray-600\">The currencies which have seen the most decrease in value this week (against the dollar)</p>\r\n                </h3>\r\n\r\n                {changeError.length > 0 ? <p className=\"text-red-700\">{changeError}</p> :\r\n                changeLoading ? <div className=\"h-24 w-24 mx-auto spinner text-center\"></div> :\r\n                <div className=\"mt-6 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\r\n                    {changeData.largest_depreciations.map((currency, i) => (\r\n                        <div key={i} className=\"flex flex-col items-center bg-white p-2 rounded\">\r\n                            <p className=\"flex jusitfy-center text-center\">\r\n                                <span className=\"mb-2 font-bold text-lg text-center\">{currency.currency}</span>\r\n                                <span className=\"py-1 pl-2 text-red-500 font-bold\">- <span className=\"font-normal\"></span>{currency.change}</span>\r\n                            </p>\r\n                            \r\n                            <CurrencyLineDepreciation\r\n                                key={i}\r\n                                className=\"w-full h-full\" \r\n                                data={currency} \r\n                                day_one={changeData.day_one}\r\n                                day_two={changeData.day_two}\r\n                                day_three={changeData.day_three}\r\n                                day_four={changeData.day_four}\r\n                                day_five={changeData.day_five}\r\n                                day_six={changeData.day_six}\r\n                                day_seven={changeData.day_seven}\r\n                            />\r\n                        </div>\r\n                        \r\n                    ))}\r\n                </div>\r\n                \r\n                }\r\n            </section>\r\n                \r\n            <section id=\"actions-today\" className=\"mt-16 mb-2 p-3\">\r\n                <h3 className=\"text-brand text-lg lg:text-xl font-bold\">Actions Today</h3>\r\n                {actionsError.length > 0 ?\r\n                    <p className=\"text-red-700\">{actionsError}</p>\r\n                :\r\n                actionsLoading ? <div className=\"h-24 w-24 mx-auto spinner text-center\"></div> :\r\n                <div className=\"\">\r\n                    <p>The number of new trades created, trades edited, trades deleted, trade fields identified as erroneous and trade fields corrected today.</p>\r\n                    \r\n                    <div className=\"lg:w-3/5 bg-white p-4 mt-3 rounded shadow\">\r\n                        <div className=\"flex justify-center flex-wrap mt-2 mb-3\">\r\n                            <div className=\"flex flex-col items-center\">\r\n                                <p className=\"px-2 p-1 text-white bg-green-600 rounded\">Creations</p>\r\n                                <p className=\"font-bold\">{actionsData.creation_count}</p>\r\n                            </div>\r\n\r\n                            <div className=\"flex flex-col items-center\">\r\n                                <p className=\"px-2 ml-4 mr-4 p-1 text-white bg-yellow-600 rounded\">Edits</p>\r\n                                <p className=\"font-bold\">{actionsData.edit_count}</p>\r\n                            </div>\r\n\r\n                            <div className=\"flex flex-col items-center\">\r\n                                <p className=\"px-2 ml-4 p-1 text-white bg-red-600 rounded\">Deletions</p>\r\n                                <p className=\"font-bold\">{actionsData.delete_count}</p>\r\n                            </div>\r\n\r\n                            <div className=\"mt-4 md:mt-0 flex flex-col items-center\">\r\n                                <p className=\"px-2 p-1 ml-4 text-white rounded\" style={{backgroundColor: '#4263f5'}}>Erroneous Fields</p>\r\n                                <p className=\"font-bold\">{actionsData.erroneous_fields}</p>\r\n                            </div>\r\n\r\n                            <div className=\"mt-4 md:mt-0 flex flex-col items-center\">\r\n                                <p className=\"px-2 p-1 ml-4 text-white rounded\" style={{backgroundColor: '#d142f5'}}>Corrections</p>\r\n                                <p className=\"font-bold\">{actionsData.corrections}</p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <ActionsDonut className=\"mt-2\" data={actionsData}/>\r\n                    </div>\r\n                </div>\r\n                    \r\n                }\r\n                \r\n            </section>\r\n\r\n            <section id=\"product-price-vs-volume\">\r\n\r\n            </section>\r\n        \r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport api from \"../../api\";\r\n\r\nimport Action from \"./Action\";\r\nimport Trade from \"./Trade\";\r\n\r\nexport default function TradingAll() {\r\n\r\n    const months = [\"Jan\", \"Feb\" , \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n    const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\r\n    let date = new Date()\r\n\r\n    const [page, setPage] = useState(1)\r\n    const [totalTrades, setTotalTrades] = useState(2)\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(true)\r\n    const [trades, setTrades] = useState([])\r\n\r\n    const changePage = (button) => {\r\n        if(loading) {\r\n            return;\r\n        }\r\n\r\n        if(button === \"previous\" && page === 1) {\r\n            setPage(1)\r\n        }\r\n        if(button === \"previous\") {\r\n            setPage(page - 1)\r\n        }\r\n\r\n        if(button === \"next\") {\r\n            setPage(page + 1)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        api.get(\"/trade/total\").then(response => {\r\n            setError(\"\")\r\n            setTotalTrades(response.data.total_trades)\r\n        }).catch(error => {\r\n            setError(\"Error getting total trades, try refreshing\")\r\n        })\r\n\r\n        api.get(`/trade/recent?page_number=${page}`).then(response => {\r\n            console.log(response)\r\n            setError(\"\");\r\n            setLoading(false);\r\n            setTrades(response.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n            setError(err.message);\r\n            setLoading(false);\r\n        });\r\n\r\n    }, [page])\r\n\r\n    if (error.length > 0) {\r\n        return (\r\n            <>\r\n            <div className=\"px-4 md:px-0\">\r\n                <div className=\"flex items-center\">\r\n                    <h1 className=\"text-brand font-bold text-2xl\">Trades (all) &bull; \r\n                    <span className=\"ml-2 text-gray-500 font-normal text-base uppercase tracking-tight\"> {date.getDate()} {months[date.getMonth()]} {date.getFullYear()}, {days[date.getDay()]} - {date.getHours()}:{String(date.getMinutes()).padStart(2, \"0\")}</span></h1>\r\n                </div>\r\n                <p>View, manage and act on trade information</p>\r\n            </div>\r\n            \r\n            <div className=\"mt-6 flex flex-wrap justify-center md:justify-between w-auto\">\r\n                <Action title=\"Create a Trade\" message=\"Insert a new trade’s data into the system manually\" linkTo=\"/trading/create-trade\" icon=\"create\" />\r\n                <Action title=\"Edit a Trade\" message=\"Update a trade that already exists to it’s new values\" linkTo=\"/trading/edit-trade\" icon=\"edit\" />\r\n                <Action title=\"Delete a Trade\" message=\"Delete an already existing trade from the system\" linkTo=\"/trading/delete-trade\" icon=\"delete\" />\r\n            </div>\r\n\r\n            <h5 className=\"text-red-700\">{error}</h5>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"px-4 md:px-0\">\r\n                <div className=\"flex items-center\">\r\n                    <h1 className=\"text-brand font-bold text-2xl\">Trades &bull; \r\n                    <span className=\"ml-2 text-gray-500 font-normal text-base uppercase tracking-tight\"> {date.getDate()} {months[date.getMonth()]} {date.getFullYear()}, {days[date.getDay()]} - {date.getHours()}:{String(date.getMinutes()).padStart(2, \"0\")}</span></h1>\r\n                </div>\r\n                <p>View, manage and act on trade information</p>\r\n            </div>\r\n            \r\n            <div className=\"mt-6 flex flex-wrap justify-center md:justify-between w-auto\">\r\n                <Action title=\"Create a Trade\" message=\"Insert a new trade’s data into the system manually\" linkTo=\"/trading/create-trade\" icon=\"create\" />\r\n                <Action title=\"Find a Trade\" message=\"Find a trade in the system to view, edit or delete\" linkTo=\"/trading/find-trade\" icon=\"find\" />\r\n                <Action title=\"Delete a Trade\" message=\"Delete an already existing trade from the system\" linkTo=\"/trading/delete-trade\" icon=\"delete\" />\r\n            </div>\r\n\r\n            <div style={{minHeight: \"645px\"}} className=\"trades mt-16 mx-4\">\r\n            <div className=\"w-full flex justify-between items-baseline\">\r\n                <h3 className=\"text-brand font-bold text-lg mb-1\">Trades <span className=\"block text-gray-500 text-sm font-normal\">Ordered by: recent</span></h3>\r\n            </div>\r\n            \r\n                {loading ? <div className=\"h-32 w-32 mx-auto spinner text-center\"></div> :\r\n\r\n                trades.length === 0 ? <p className=\"text-center text-brand font-semibold text-lg\">No trades are in the system.</p> :\r\n                <div className=\"grid grid-cols-1 gap-3 md:grid-cols-2\">\r\n                    {trades.map((trade, i) => (\r\n                        <Trade\r\n                            key={i}\r\n                            risk={Math.floor(Math.random() * 100) + 1}\r\n                            id={trade.id}\r\n                            type={trade.product_id}\r\n                            product={trade.product} \r\n                            buying_company_id={trade.buying_party} \r\n                            selling_company_id={trade.selling_party}\r\n                            buying_company={trade.buying_company} \r\n                            selling_company={trade.selling_company} \r\n                            quantity={trade.quantity} \r\n                            strikePrice={trade.strike_price}\r\n                            maturityDate={trade.maturity_date}\r\n                        />\r\n                    ))}\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"mt-12 pb-12\">\r\n                <hr/>\r\n                <div className=\"mt-3 flex justify-between\">\r\n                    <p>Showing <span className=\"font-bold\">{(page-1) * 12}</span> to <span className=\"font-bold\">{(page-1) * 12 + 12}</span> of <span className=\"font-bold\">{totalTrades}</span> trades</p>\r\n                    <div className=\"\">\r\n                        <button onClick={()=> changePage(\"previous\")} className=\"w-24 bg-white border rounded p-2 mr-4 text-center\">Previous</button>\r\n                        <button onClick={()=> changePage(\"next\")} className=\"w-24 bg-white border rounded p-2 text-center\">Next</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { browserHistory } from \"react-router\";\r\n\r\nimport api from \"../../../api.js\";\r\nimport axios from \"axios\";\r\n\r\nexport default function CreateTrade() {\r\n    //Data for the auto suggested form inputs is found through the redux state of the app.\r\n    \r\n    const [loading, setLoading] = useState(true);\r\n    const [companies, setCompanies] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [currencies, setCurrencies] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [formError, setFormError] = useState(\"Please enter all of the trade information\");\r\n    const [submitError, setSubmitError] = useState(\"\")\r\n    const [submitLoading, setSubmitLoading] = useState(false)\r\n    const [submitStatus, setSubmitStatus] = useState(\"\")\r\n\r\n    const [sellingCompany, setSellingCompany] = useState(null);\r\n    const [buyingCompany, setBuyingCompany] = useState(null);\r\n    const [product, setProduct] = useState(null);\r\n    const [underlyingCurrency, setUnderlyingCurrency] = useState(null);\r\n    const [notionalCurrency, setNotionalCurrency] = useState(null);\r\n    const [maturityDate, setMaturityDate] = useState(null);\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [strikePrice, setStrikePrice] = useState(0);\r\n    const [underlyingPrice, setUnderlyingPrice] = useState(0);\r\n\r\n    useEffect(()=> {\r\n        getCompaniesAndCurrenciesAndProducts();\r\n\r\n        let interval = setInterval(() => {\r\n            verifyForm(sellingCompany, buyingCompany, product, underlyingCurrency, notionalCurrency, maturityDate, quantity, strikePrice, underlyingPrice);\r\n        }, 500);\r\n\r\n        return ()=> {\r\n            clearInterval(interval);\r\n        }\r\n    }, [sellingCompany, buyingCompany, product, underlyingCurrency, notionalCurrency, maturityDate, quantity, strikePrice, underlyingPrice]);\r\n\r\n    //Gets products, companies and currencies from the backend so we can auto suggest these to the user\r\n    const getCompaniesAndCurrenciesAndProducts = () => {\r\n        //Dont get new data for this if we already have it\r\n        if (companies.length !== 0 && currencies.length !== 0) {\r\n            return\r\n        }\r\n\r\n        setLoading(true);\r\n        axios.all([\r\n            api.get(\"/company/list\"),\r\n            api.get(\"/currency/list\"),\r\n            //api.get(\"/product/list\")\r\n        ]).then(axios.spread((companyRes, currencyRes) => {\r\n            console.log(companyRes, currencyRes);\r\n            setLoading(false);\r\n            setCompanies(companyRes.data);\r\n            setCurrencies(currencyRes.data);\r\n\r\n            //Set the products to also include stocks at the top, this is a viable option not from the database\r\n            //setProducts([{id: -1, name: \"Stocks\"}, ...productRes.data]);\r\n            \r\n        })).catch(err => {\r\n            setError(err.message);\r\n            setLoading(false);\r\n            console.log(err);\r\n        });\r\n        verifyForm()\r\n    }\r\n\r\n    const onDropdownChangeCompanies = (tag, event, values) => {\r\n        console.log(tag, values)\r\n        if (tag === \"selling-company\") {\r\n            //Reset the product when changing a seller, they may sell different products\r\n            setProduct(null)\r\n\r\n            setSellingCompany(values)\r\n\r\n            //Get the products sold by this company\r\n            if(values !== null) {\r\n                api.get(\"/product/soldby/company_id=\" + values.id).then(response => {\r\n                    console.log(response);\r\n                    setProducts([{id: -1, name: \"Stocks (\" + values.name + \")\"}, ...response.data])\r\n                }).catch(err => {\r\n                    setError(err.message)\r\n                    return\r\n                });\r\n            }\r\n            \r\n\r\n            //Check to delete the products before setting company to null, the products depend upon the selling company\r\n            if (values === null) {\r\n                setSellingCompany(null)\r\n                setProduct(null)\r\n                return;\r\n            }\r\n\r\n            //Update the products to notify the user that the stocks they could be buying would be for the selling comapny\r\n            let currentProducts = products;\r\n            if(products.length !== 0) {\r\n                currentProducts[0] = {id: -1, name: \"Stocks (\" + values.name + \")\"}\r\n                setProducts(currentProducts)\r\n            }\r\n        }\r\n        if (tag === \"buying-company\") {\r\n            setBuyingCompany(values)\r\n        }\r\n    }\r\n\r\n    const onDropdownChangeCurrencies = (tag, event, values) => {\r\n        console.log(tag, values)\r\n        if (tag === \"underlying-currency\") {\r\n            setUnderlyingCurrency(values)\r\n        }\r\n        if (tag === \"notional-currency\") {\r\n            setNotionalCurrency(values)\r\n        } \r\n    }\r\n    \r\n    const onDropdownChangeProduct = (event, values) => {\r\n        console.log(event, values)\r\n        setProduct(values)\r\n    }\r\n    const maturityDateChange = (event) => {\r\n        setMaturityDate(event.target.value)\r\n    }\r\n\r\n    const quantityChange = (event) => {\r\n        setQuantity(event.target.value)\r\n    }\r\n\r\n    const strikePriceChange = (event) => {\r\n        setStrikePrice(event.target.value)\r\n    }\r\n\r\n    const underlyingPriceChange = (event) => {\r\n        setUnderlyingPrice(event.target.value)\r\n    }\r\n\r\n    const verifyForm = (sellingCompany, buyingCompany, product, underlyingCurrency, notionalCurrency, maturityDate, quantity, strikePrice, underlyingPrice) => {\r\n        // console.log(sellingCompany, buyingCompany, product, underlyingCurrency, notionalCurrency, maturityDate, quantity, strikePrice, underlyingPrice)\r\n        if (sellingCompany === null) {\r\n            setFormError(\"Please enter a selling company\")\r\n            return\r\n        }\r\n        if (buyingCompany === null) {\r\n            setFormError(\"Please enter a buying company\")\r\n            return\r\n        }\r\n        if(buyingCompany !== null && sellingCompany != null && buyingCompany.name === sellingCompany.name) {\r\n            setFormError(\"The buying and selling company should not be the same\")\r\n            return\r\n        }\r\n        if(quantity < 1) {\r\n            setFormError(\"The quantity should be greater than 0\")\r\n            return\r\n        }\r\n        if(maturityDate === \"\") {\r\n            setFormError(\"Please enter a maturity date\")\r\n            return\r\n        }\r\n        if(product === null) {\r\n            setFormError(\"Please enter a product being traded. You might have switched selling company after choosing a product. Please reselect the product\")\r\n            return\r\n        }\r\n        if(underlyingCurrency === null) {\r\n            setFormError(\"Please enter an underlying currency\")\r\n            return\r\n        }\r\n        if(notionalCurrency === null) {\r\n            setFormError(\"Please enter a notional currency\")\r\n            return\r\n        }\r\n        // if(underlyingCurrency !== null && notionalCurrency != null && notionalCurrency.currency === underlyingCurrency.currency) {\r\n        //     setFormError(\"The underlying and notional currencies should be different\")\r\n        //     return\r\n        // }\r\n        if(strikePrice < 0.01) {\r\n            setFormError(\"Please enter a strike price\")\r\n            return\r\n        }\r\n        if(underlyingPrice < 0.01) {\r\n            setFormError(\"Please enter an underlying price\")\r\n            return\r\n        }\r\n        if (product !== undefined) {\r\n            if (product.name.includes(\"Stocks\") && !product.name.includes(sellingCompany.name)) {\r\n                setFormError(\"Please update the stocks being purchased in the product section, you updated the selling company after selling the stock product.\")\r\n                return\r\n            }\r\n        }\r\n        setFormError(\"\")    \r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        //Cant submit if we have form errors\r\n        if(formError.length > 0) {\r\n            return\r\n        }\r\n        \r\n        setSubmitLoading(true)\r\n        setSubmitError(\"\")\r\n        setSubmitStatus(\"\")\r\n        api.post(\"/trade/create/\", {\r\n            \"selling_party\": sellingCompany.id,\r\n            \"buying_party\": buyingCompany.id,\r\n            \"product\": product.id,\r\n            \"quantity\": quantity,\r\n            \"maturity_date\": maturityDate,\r\n            \"underlying_currency\": underlyingCurrency.currency,\r\n            \"notional_currency\": notionalCurrency.currency,\r\n            \"strike_price\": strikePrice,\r\n            \"underlying_price\": underlyingPrice \r\n        }).then(response => {\r\n            console.log(response);\r\n            setSubmitLoading(false)\r\n            if (response.status === 200) {\r\n                setSubmitStatus(\"Trade successfully created.\")\r\n                browserHistory.push(`/trade/${response.data.trade_id}`)\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n            setSubmitLoading(false)\r\n            setSubmitError(err.message)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * VIEWS\r\n     */\r\n\r\n    if (loading || error) {\r\n        return (\r\n            <>\r\n            <div className=\"flex flex-col items-center md:items-start\">\r\n                <h2 className=\"text-brand font-bold text-xl\">Create a new trade</h2>\r\n                <p>Insert the details for a derivative manually</p>\r\n                <hr className=\"my-2\" />\r\n                <p>\r\n                    If you are choosing the trade a Stock, this stock will be off the selling company. If you change the selling company after selecting the stock for a previously selected selling company you must reselect your product being traded.\r\n                </p>\r\n            </div>\r\n            { error && \r\n                <div className=\"\">\r\n                    <h4 className=\"text-red-700 font-bold text-xl\">Error</h4>\r\n                    <p>{error}</p>\r\n                </div>\r\n            }\r\n\r\n            {loading && <div className=\"h-32 w-32 mx-auto spinner text-center\"></div> }\r\n            </>\r\n        );\r\n    }\r\n\r\n    //General render\r\n    return (\r\n        <>\r\n        <div className=\"flex flex-col items-center md:items-start\">\r\n            <h2 className=\"text-brand font-bold text-xl\">Create a new trade</h2>\r\n            <p>Insert the details for a derivative manually</p>\r\n            <hr className=\"my-2\" />\r\n            <p>\r\n                If you are choosing the trade a Stock, this stock will be off the selling company. If you change the selling company after selecting the stock for a previously selected selling company you must reselect your product being traded.\r\n            </p>\r\n        </div>\r\n\r\n        <form onSubmit={onSubmit} className=\"mt-8 w-11/12 p-4 mx-auto h-auto flex flex-col justify-center items-center bg-white shadow rounded-lg\">\r\n            \r\n            {/* Selling Company */}\r\n            <div className=\"mb-8\">\r\n                <p className=\"mb-2 text-brand text-md font-semibold\">Selling Company</p>\r\n                <Autocomplete\r\n                    id=\"selling-company-dropdown\"\r\n                    name=\"selling-company-dropdown\"\r\n                    options={companies}\r\n                    onChange={(event, values)=> onDropdownChangeCompanies(\"selling-company\", event, values)}\r\n                    getOptionLabel={option => option.name}\r\n                    style={{ width: 300 }}\r\n                    renderInput={params => <TextField {...params} label=\"Selling Company\" variant=\"outlined\" />}\r\n                />\r\n            </div>\r\n\r\n            {/* Buying party */}\r\n            <div className=\"mb-8\">\r\n                <p className=\"mb-2 text-brand text-md font-semibold\">Buying Company</p>\r\n                <Autocomplete\r\n                    id=\"buying-company-dropdown\"\r\n                    name=\"buying-company-dropdown\"\r\n                    options={companies}\r\n                    onChange={(event, values)=> onDropdownChangeCompanies(\"buying-company\", event, values)}\r\n                    getOptionLabel={option => option.name}\r\n                    style={{ width: 300 }}\r\n                    renderInput={params => <TextField {...params} label=\"Buying Company\" variant=\"outlined\" />}\r\n                />\r\n            </div>\r\n            \r\n            {/* Product being traded */}\r\n            <div className=\"mb-8\">\r\n                <p className=\"mb-2 text-brand text-md font-semibold\">Product Type</p>\r\n\r\n                {sellingCompany === null ?\r\n                    <>\r\n                    <p className=\"text-red-700\">Please choose a selling company first</p>\r\n                    <Autocomplete\r\n                        id=\"product-dropdown\"\r\n                        name=\"product-dropdown\"\r\n                        options={products}\r\n                        onChange={onDropdownChangeProduct}\r\n                        getOptionLabel={option => option.name}\r\n                        disabled\r\n                        style={{ width: 300 }}\r\n                        renderInput={params => <TextField {...params} label=\"Product\" variant=\"outlined\" />}\r\n                    />\r\n                    </>\r\n                    :\r\n                    <Autocomplete\r\n                        id=\"product-dropdown\"\r\n                        name=\"product-dropdown\"\r\n                        options={products}\r\n                        onChange={onDropdownChangeProduct}\r\n                        getOptionLabel={option => option.name}\r\n                        style={{ width: 300 }}\r\n                        renderInput={params => <TextField {...params} label=\"Product\" variant=\"outlined\" />}\r\n                    />\r\n                }\r\n            </div>\r\n\r\n            {/* Underlying Currency */}\r\n            <div className=\"mb-8\">\r\n                <p className=\"mb-2 text-brand text-md font-semibold\">Underlying Currency</p>\r\n                <Autocomplete\r\n                    id=\"underlying-currency-dropdown\"\r\n                    name=\"underlying-currency-dropdown\"\r\n                    options={currencies}\r\n                    onChange={(event, values)=> onDropdownChangeCurrencies(\"underlying-currency\", event, values)}\r\n                    getOptionLabel={option => option.currency}\r\n                    style={{ width: 300 }}\r\n                    renderInput={params => <TextField {...params} label=\"Underlying Currency\" variant=\"outlined\" />}\r\n                />\r\n            </div>\r\n\r\n            {/* Underlying Currency */}\r\n            <div className=\"mb-8\">\r\n                <p className=\"mb-2 text-brand text-md font-semibold\">Notional Currency</p>\r\n                <Autocomplete\r\n                    id=\"notional-currency-dropdown\"\r\n                    name=\"notional-currency-dropdown\"\r\n                    options={currencies}\r\n                    onChange={(event, values)=> onDropdownChangeCurrencies(\"notional-currency\", event, values)}\r\n                    getOptionLabel={option => option.currency}\r\n                    style={{ width: 300 }}\r\n                    renderInput={params => <TextField {...params} label=\"Notional Currency\" variant=\"outlined\" />}\r\n                />\r\n            </div>\r\n\r\n            {/* Quantity */}\r\n            <div className=\"mb-8\" style={{width: \"300px\"}}>\r\n                <p className=\"text-brand text-md font-semibold\">Quantity</p>\r\n                <small className=\"mb-2\">Quantity must be a positive number, not including 0</small><br />\r\n                <input onChange={quantityChange} value={quantity} min=\"1\" className=\"w-full py-4 px-6 rounded border hover:border-gray-600\" type=\"number\" name=\"quantity\" id=\"quantity\"/>\r\n            </div>\r\n\r\n            {/* Maturity Date */}\r\n            <div className=\"mb-8\" style={{width: \"300px\"}}>\r\n                <p className=\"mb-2 text-brand text-md font-semibold\">Maturity Date</p>\r\n                <small>Maturity Dates must be in the future</small>\r\n                <input onChange={maturityDateChange} min={new Date().toISOString().split('T')[0]} className=\"w-full py-4 px-6 rounded border hover:border-gray-600\" type=\"date\" name=\"maturity-date\" id=\"maturity-date\"/>\r\n            </div>\r\n            \r\n            {underlyingCurrency === null && <p className=\"mb-4 mt-4 text-red-800\">Please enter an underlying currency before you enter the following details</p>}\r\n            \r\n            {/* Underlying Price */}\r\n            <div className=\"mb-8\" style={{width: \"300px\"}}>\r\n                <p className=\"mb-2 text-brand text-md font-semibold\">Underlying Price</p>\r\n                <small>Underlying price must be a positive number (not 0)</small><br />\r\n                {underlyingCurrency === null ? <small>The current price per unit represented in the underlying currency</small> : <small>The current price per unit represented in the underlying currency:  {underlyingCurrency.currency}</small>}\r\n                <input disabled={underlyingCurrency === null} onChange={underlyingPriceChange} min={0.01} step=\".01\" className=\"w-full py-4 px-6 rounded border hover:border-gray-600\" type=\"number\" name=\"underlying-price\" id=\"underlying-price\"/>\r\n            </div>\r\n\r\n            {/* Stike Price */}\r\n            <div className=\"mb-8\" style={{width: \"300px\"}}>\r\n                <p className=\"mb-2 text-brand text-md font-semibold\">Strike Price</p>\r\n                <small>Strike price must be a positive number (not 0)</small><br />\r\n                {underlyingCurrency === null ? <small>Strike price is represented in the underlying currency</small> : <small>Strike price is represented in the underlying currency:  {underlyingCurrency.currency}</small>}\r\n                <input disabled={underlyingCurrency === null} onChange={strikePriceChange} min={0.01} step=\".01\" className=\"w-full py-4 px-6 rounded border hover:border-gray-600\" type=\"number\" name=\"strike-price\" id=\"strike-price\"/>\r\n            </div>\r\n            \r\n            {submitError.length > 0 && <p className=\"text-red-700\">An error occured when creating the request: {submitError}</p>}\r\n                \r\n            {formError.length > 0 ?\r\n                <>\r\n                <p className=\"mb-4 text-red-600 font-semibold text-md\">Error! {formError}</p>\r\n                <button className=\"mx-auto mt-2 text-center px-3 py-2 rounded shadow bg-red-800 text-white uppercase font-semibold text-sm hover:cursor-not-allowed\" type=\"submit\"><i className=\"fas fa-ban\"></i> Form Incomplete</button>\r\n                </>\r\n                :\r\n                submitLoading ? <button className=\"mx-auto mt-2 text-center px-3 py-2 rounded shadow bg-brand text-white uppercase font-semibold text-sm\" type=\"submit\">Loading...</button> : <button className=\"mx-auto mt-2 text-center px-3 py-2 rounded shadow bg-brand text-white uppercase font-semibold text-sm\" type=\"submit\">Create Trade</button>\r\n            }\r\n            \r\n        </form>\r\n        </>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport api from \"../../../api\";\r\n\r\nexport default function EditTrade(props) {\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const [trade, setTrade] = useState(null);\r\n\r\n    const [status, setStatus] = useState(\"\");\r\n    const [changes, setChanges] = useState(null);\r\n\r\n    useEffect(() => {\r\n        api.get(\"/trade/id=\" + props.params.tradeID).then(response => {\r\n            setLoading(false);\r\n\r\n            console.log(response);\r\n            if (response.data.length === 0) {\r\n                setError(\"No trades exist with that ID\")\r\n            } else {\r\n                setTrade(response.data[0]);\r\n            }\r\n            \r\n        }).catch(err => {\r\n            console.log(err);\r\n            setLoading(false);\r\n            setError(err.message);\r\n        });\r\n    }, []);\r\n\r\n    const maturityDateChange = (event) => {\r\n        event.persist();\r\n        setTrade((prevState) => ({ ...prevState, \"maturity_date\": event.target.value }));\r\n    }\r\n\r\n    const quantityChange = (event) => {\r\n        event.persist();\r\n        setTrade((prevState) => ({ ...prevState, \"quantity\": event.target.value }));\r\n    }\r\n\r\n    const strikePriceChange = (event) => {\r\n        event.persist();\r\n        setTrade((prevState) => ({ ...prevState, \"strike_price\": event.target.value }));\r\n    }\r\n\r\n    const underlyingPriceChange = (event) => {\r\n        event.persist();\r\n        setTrade((prevState) => ({ ...prevState, \"underlying_price\": event.target.value }));\r\n    }\r\n\r\n    const submit = (event) => {\r\n        event.preventDefault()\r\n        console.log(\"submitting!\", trade)\r\n\r\n        setLoading(true)\r\n        setChanges(null)\r\n        setStatus(\"\")\r\n        setError(\"\")\r\n\r\n        //Add a new field which the backend requires for the trade id.\r\n        let updatedTradeObj = trade.trade_id = trade.id\r\n        setTrade(updatedTradeObj)\r\n\r\n        api.post(\"/trade/edit/\", trade).then(response => {\r\n            console.log(response);\r\n            setLoading(false)\r\n            if (response.data.message !== undefined) {\r\n                setStatus(\"SUCCESS! No changes were made, all of the fields are the same\")\r\n            }\r\n            if (response.data.changes !== undefined) {\r\n                setStatus(\"SUCCESS! Trade Updated, new details are below.\")\r\n                setChanges(response.data.changes)\r\n                setTrade(response.data.trade[0])\r\n\r\n            }\r\n        }).catch(err => {\r\n            console.log(err.response);\r\n            setError(err.response.data.error)\r\n            api.get(\"/trade/id=\" + props.params.tradeID).then(response => {\r\n                setLoading(false);\r\n    \r\n                console.log(response);\r\n                if (response.data.length === 0) {\r\n                    setError(\"No trades exist with that ID\")\r\n                } else {\r\n                    setTrade(response.data[0]);\r\n                }\r\n                \r\n            }).catch(err => {\r\n                console.log(err);\r\n                setLoading(false);\r\n                setError(err.message);\r\n            });\r\n\r\n        })\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"h-32 w-32 mx-auto spinner text-center\"></div>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <h2 className=\"text-brand font-bold text-2xl\">Editing Trade: <span className=\" text-lg text-gray-900\">{props.params.tradeID}</span></h2>\r\n        <p>Current trade details</p>\r\n        <hr className=\"my-2\" />\r\n\r\n\r\n        {trade !== null &&\r\n            <>\r\n            <h2 className=\"text-center text-xl\">Trade Information for: <strong>{trade.id}</strong></h2>\r\n                <div className=\"w-8/12 mt-8 mx-auto py-4 px-4 text-center rounded shadow bg-white\">\r\n                    <p><span className=\"font-bold\">Product ID</span>: {trade.product}</p>\r\n                    <p><span className=\"font-bold\">Date</span>: {trade.date}</p>\r\n                    <p><span className=\"font-bold\">Maturity Date</span>: {trade.maturity_date}</p>\r\n                    <p><span className=\"font-bold\">Strike Price</span>: {trade.strike_price}</p>\r\n                    <p><span className=\"font-bold\">Quantity</span>: {trade.quantity}</p>\r\n                    <p><span className=\"font-bold\">Buying Party</span>: {trade.buying_party}</p>\r\n                    <p><span className=\"font-bold\">Selling Party</span>: {trade.selling_party}</p>\r\n                    <p><span className=\"font-bold\">Notional Currency</span>: {trade.notional_currency}</p>\r\n                    <p><span className=\"font-bold\">Underlying Currency</span>: {trade.underlying_currency}</p>\r\n                    \r\n                </div>\r\n            <form onSubmit={submit} className=\"mt-8 w-11/12 p-4 mx-auto h-auto flex flex-col justify-center items-center bg-white shadow rounded-lg\" action=\"\">\r\n                <div className=\"flex flex-col items-center\">\r\n                <p className=\"mb-4 font-bold text-lg\">Editable sections of a trade:</p>\r\n                {/* Maturity Date */}\r\n                <div className=\"mb-8\" style={{width: \"300px\"}}>\r\n                    <p className=\"text-brand text-md font-semibold\">Maturity Date</p>\r\n                    <small>Maturity date's cannot be in the past</small>\r\n                    <input onChange={(event)=> maturityDateChange(event)} min={new Date().toISOString().split('T')[0]} value={trade.maturity_date} className=\"w-full py-4 px-6 rounded border hover:border-gray-600\" type=\"date\" name=\"maturity-date\" id=\"maturity-date\"/>\r\n                </div>\r\n\r\n                {/* Quantity */}\r\n                <div className=\"mb-8\" style={{width: \"300px\"}}>\r\n                    <p className=\"text-brand text-md font-semibold\">Quantity</p>\r\n                    <small>Quantities must be at least 1</small>\r\n                    <input onChange={(event)=> quantityChange(event)} value={trade.quantity} min=\"1\" className=\"w-full py-4 px-6 rounded border hover:border-gray-600\" type=\"number\" name=\"quantity\" id=\"quantity\"/>\r\n                </div>\r\n\r\n                {/* Strike Price */}\r\n                <div className=\"mb-8\" style={{width: \"300px\"}}>\r\n                    <p className=\"text-brand text-md font-semibold\">Strike Price</p>\r\n                    <small>Strike price must be a positive number (not 0)</small>\r\n                    <input onChange={(event)=> strikePriceChange(event)} value={trade.strike_price} min={0.01} step=\".01\" className=\"w-full py-4 px-6 rounded border hover:border-gray-600\" type=\"number\" name=\"strike-price\" id=\"strike-price\"/>\r\n                </div>\r\n\r\n                {/* Underlying Price */}\r\n                <div className=\"mb-8\" style={{width: \"300px\"}}>\r\n                    <p className=\"text-brand text-md font-semibold\">Underlying Price</p>\r\n                    <small>underlying price must be a positive number (not 0)</small>\r\n                    <input onChange={(event)=> underlyingPriceChange(event)} value={trade.underlying_price} min={0.01} step=\".01\" className=\"w-full py-4 px-6 rounded border hover:border-gray-600\" type=\"number\" name=\"underlying-price\" id=\"underlying-price\"/>\r\n                </div>\r\n                \r\n                {error.length > 0 && <p className=\"text-red-700\">{error}</p>}\r\n                {status.length > 0 && <p className=\"text-green-600\">{status}</p>}\r\n                <input className=\"mx-auto mt-2 text-center px-3 py-2 rounded shadow bg-brand text-white uppercase font-semibold text-sm\" type=\"submit\" value=\"Edit Trade\"/>\r\n                </div>\r\n            </form>\r\n            </>\r\n        }\r\n        \r\n\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nimport api from \"../../../api.js\";\r\n\r\nexport default function DeleteTrade(props) {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [tradeID, setTradeID] = useState(\"\");\r\n    const [trade, setTrade] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [justDeleted, setJustDeleted] = useState(false);\r\n\r\n    useEffect(()=> {\r\n        if (props.params.tradeID !== undefined){\r\n            getTrade(props.params.tradeID)\r\n        }\r\n    }, [])\r\n\r\n    const submit = e => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        console.log(\"Form submitted\", tradeID);\r\n        getTrade(tradeID);\r\n    }\r\n\r\n    const getTrade = id => {\r\n        api.get(\"/trade/id=\" + id).then(response => {\r\n            setError(\"\");\r\n            setLoading(false);\r\n            setJustDeleted(false);\r\n            if (response.data.length === 0) {\r\n                setError(\"No trades exist with that ID\")\r\n            } else {\r\n                setTrade(response.data[0]);\r\n                console.log(response);\r\n            }\r\n            \r\n        }).catch(err => {\r\n            console.log(err);\r\n            setLoading(false);\r\n            setError(err.message);\r\n        });\r\n    }\r\n\r\n    const deleteTrade = id => {\r\n        setLoading(true);\r\n        api.post(\"/trade/delete/\",\r\n        {\r\n            trade_id: id\r\n        }).then(response => {\r\n            console.log(response);\r\n            setLoading(false);\r\n            setJustDeleted(true);\r\n        }).catch(err => {\r\n            console.log(err);\r\n            setError(err.message);\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {error.length > 0 &&  \r\n            <>\r\n                <p className=\"text-red-800 font-bold text-xl\">Error</p>\r\n                <p className=\"text-red-600\">{error}</p>\r\n            </>\r\n        }\r\n        \r\n        {justDeleted && <p className=\"text-green-600 font-semibold mb-4\">Successfully deleted trade: {tradeID} </p>}\r\n        <h2 className=\"text-brand text-2xl font-bold\">Delete a Trade</h2>\r\n        <p>Search for the ID of a trade you wish to delete</p>\r\n\r\n        {loading === false ? \r\n        <form className=\"mt-6\" onSubmit={submit}>\r\n            <label className=\"block uppercase tracking-wide text-gray-600 text-xs font-bold mb-2\" htmlFor=\"trade-id\">\r\n                Trade ID\r\n            </label>\r\n            <input className=\"appearance-none block w-full md:w-1/6 bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3\" value={tradeID} onChange={e => setTradeID(e.target.value)}id=\"trade-id\" type=\"text\" placeholder=\"################\" />\r\n            <input className=\"bg-brand text-white px-3 py-2 rounded hover:shadow hover:cursor-pointer text-xs uppercase tracking-wide\" type=\"submit\" value={loading ? \"Loading...\" : \"Search\"} />\r\n        </form> : \"\"}\r\n\r\n        {loading ? <div className=\"h-32 w-32 mx-auto spinner text-center\"></div> : \"\"}\r\n        \r\n        {error.length === 0 && !(trade instanceof Array) && !justDeleted ?\r\n            <div className=\"w-8/12 mt-8 py-4 px-4 text-center rounded shadow bg-white\">\r\n                <p><span className=\"font-bold\">Trade ID</span>: {trade.id}</p>\r\n                <p><span className=\"font-bold\">Product ID</span>: {trade.product}</p>\r\n                <p><span className=\"font-bold\">Date</span>: {trade.date}</p>\r\n                <p><span className=\"font-bold\">Maturity Date</span>: {trade.maturity_date}</p>\r\n                <p><span className=\"font-bold\">Strike Price</span>: {trade.strike_price}</p>\r\n                <p><span className=\"font-bold\">Quantity</span>: {trade.quantity}</p>\r\n                <p><span className=\"font-bold\">Buying Party</span>: {trade.buying_party}</p>\r\n                <p><span className=\"font-bold\">Selling Party</span>: {trade.selling_party}</p>\r\n                <p><span className=\"font-bold\">Notional Currency</span>: {trade.notional_currency}</p>\r\n                <p><span className=\"font-bold\">Underlying Currency</span>: {trade.underlying_currency}</p>\r\n\r\n                <div className=\"mt-6 w-full mx-auto flex justify-center\">\r\n                    <button onClick={()=> deleteTrade(trade.id)} className=\"ml-2 px-4 py-1 text-white rounded shadow bg-red-700 hover:cursor-pointer hover:bg-red-500\">Delete</button>\r\n                </div>\r\n            </div>\r\n        : \"\"}\r\n        </>\r\n    );\r\n}","import React, { useState } from 'react';\r\n\r\nimport { browserHistory,  Link } from \"react-router\"\r\n\r\nimport api from \"../../../api\";\r\n\r\n\r\nexport default function FindTrade() {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [searchError, setSearchError] = useState(\"\")\r\n    const [tradeID, setTradeID] = useState(\"\")\r\n\r\n    const [trade, setTrade] = useState(null)\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault()\r\n\r\n        setLoading(true)\r\n        api.get(\"/trade/id=\" + tradeID).then(response => {\r\n            setLoading(false);\r\n\r\n            console.log(response);\r\n            if (response.data.length === 0) {\r\n                setSearchError(\"No trades exist with that ID\")\r\n            } else {\r\n                // setTrade(response.data[0]);\r\n                browserHistory.push(`/trade/${tradeID}`)\r\n            }\r\n            \r\n        }).catch(err => {\r\n            console.log(err);\r\n            setLoading(false);\r\n            setSearchError(err.message);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h2 className=\"text-brand font-bold text-2xl\">Find a Trade</h2>\r\n        <p>Search for a trade and view, edit or delete the trade</p>\r\n\r\n        <form className=\"mt-6\" onSubmit={submit}>\r\n            <label className=\"block uppercase tracking-wide text-gray-600 text-xs font-bold mb-2\" htmlFor=\"trade-id\">\r\n                Trade ID\r\n            </label>\r\n            <input className=\"appearance-none block w-full md:w-1/6 bg-grey-lighter text-grey-darker border border-red rounded py-3 px-4 mb-3\" value={tradeID} onChange={(e) => setTradeID(e.target.value)} id=\"trade-id\" type=\"text\" placeholder=\"################\" />\r\n            \r\n            {searchError.length > 0 && <p className=\"text-red-700\">Error: {searchError}</p>}\r\n            <input className=\"bg-brand text-white px-3 py-2 rounded hover:shadow hover:cursor-pointer text-xs uppercase tracking-wide\" type=\"submit\" value={loading ? \"Loading...\" : \"Search\"} />\r\n        </form>\r\n\r\n\r\n        {trade !== null &&\r\n            <div className=\"w-8/12 mt-8 py-4 px-4 text-center rounded shadow bg-white\">\r\n                <p><span className=\"font-bold\">Trade ID</span>: {trade.id}</p>\r\n                <p><span className=\"font-bold\">Product ID</span>: {trade.product}</p>\r\n                <p><span className=\"font-bold\">Date</span>: {trade.date}</p>\r\n                <p><span className=\"font-bold\">Maturity Date</span>: {trade.maturity_date}</p>\r\n                <p><span className=\"font-bold\">Strike Price</span>: {trade.strike_price}</p>\r\n                <p><span className=\"font-bold\">Quantity</span>: {trade.quantity}</p>\r\n                <p><span className=\"font-bold\">Buying Party</span>: {trade.buying_party}</p>\r\n                <p><span className=\"font-bold\">Selling Party</span>: {trade.selling_party}</p>\r\n                <p><span className=\"font-bold\">Notional Currency</span>: {trade.notional_currency}</p>\r\n                <p><span className=\"font-bold\">Underlying Currency</span>: {trade.underlying_currency}</p>\r\n\r\n                <div className=\"mt-6\">\r\n                    <Link to={`/trading/edit-trade/${trade.id}`} className=\"mr-2 px-4 py-1 text-white rounded shadow bg-indigo-700 hover:cursor-pointer hover:bg-indigo-500\">Edit</Link>\r\n\r\n                </div>\r\n            </div>\r\n        \r\n        }\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nimport api from \"../../api\";\r\nimport { browserHistory } from \"react-router\";\r\n\r\nexport default function Trade(props) {\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const [trade, setTrade] = useState({});\r\n\r\n    useEffect(()=> {\r\n        api.get(\"/trade/id=\" + props.params.tradeID).then(response => {\r\n            if(response.data.length === 0) {\r\n                console.log(\"woew\")\r\n                setTrade({});\r\n                setLoading(false);\r\n                setError(\"No trade exists with that id.\"); \r\n            } else {\r\n                console.log(response);\r\n                setTrade(response.data[0]);\r\n                setLoading(false);\r\n                setError(\"\");\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n            setError(err.message);\r\n            setLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return (\r\n            <>  \r\n            <h2 className=\"mt-12 text-xl text-center\">Loading trade: <strong>{props.params.tradeID}</strong></h2>\r\n            <div className=\"h-32 w-32 mx-auto spinner text-center\"></div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    if(error.length > 0) {\r\n        return (\r\n            <>  \r\n            <h2 className=\"mt-12 text-xl text-center\">Error loading trade: <strong>{props.params.tradeID}</strong></h2>\r\n            <p className=\" mt-2 text-red-700 text-center\">{error}</p>\r\n            </>\r\n        );\r\n    }\r\n\r\n    if (trade === null || props.params.tradeID === \"undefined\") {\r\n        return (\r\n            <>  \r\n            <h2 className=\"mt-12 text-xl text-center\">Error loading trade: <strong>{props.params.tradeID}</strong></h2>\r\n            <p className=\" mt-2 text-red-700 text-center\">{error}</p>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <h2 className=\"text-center text-xl\">Trade Information for: <strong>{trade.id}</strong></h2>\r\n                <div className=\"w-8/12 mt-8 mx-auto py-4 px-4 text-center rounded shadow bg-white\">\r\n                    <p><span className=\"font-bold\">Product ID</span>: {trade.product}</p>\r\n                    <p><span className=\"font-bold\">Date</span>: {trade.date}</p>\r\n                    <p><span className=\"font-bold\">Maturity Date</span>: {trade.maturity_date}</p>\r\n                    <p><span className=\"font-bold\">Strike Price</span>: {trade.strike_price}</p>\r\n                    <p><span className=\"font-bold\">Underlying Price</span>: {trade.underlying_price}</p>\r\n                    <p><span className=\"font-bold\">Quantity</span>: {trade.quantity}</p>\r\n                    <p><span className=\"font-bold\">Buying Party</span>: {trade.buying_party}</p>\r\n                    <p><span className=\"font-bold\">Selling Party</span>: {trade.selling_party}</p>\r\n                    <p><span className=\"font-bold\">Notional Currency</span>: {trade.notional_currency}</p>\r\n                    <p><span className=\"font-bold\">Underlying Currency</span>: {trade.underlying_currency}</p>\r\n                    <p><span className=\"font-bold\">Notional Amount</span>: {trade.notional_amount}</p>\r\n    \r\n                    <div className=\"mt-6 w-full mx-auto flex justify-center\">\r\n                        <button onClick={()=> browserHistory.push(`/trading/edit-trade/${trade.id}`)} className=\"mr-2 px-4 py-1 text-white rounded shadow bg-indigo-700 hover:cursor-pointer hover:bg-indigo-500\">Edit</button>\r\n                        <button onClick={()=> browserHistory.push(`/trading/delete-trade/${trade.id}`)} className=\"ml-2 px-4 py-1 text-white rounded shadow bg-red-700 hover:cursor-pointer hover:bg-red-500\">Delete</button>\r\n                    </div>\r\n                </div>\r\n                \r\n            </>\r\n        );\r\n    }\r\n\r\n    \r\n    \r\n}","import React, { useState, useEffect } from 'react';\r\nimport moment from \"moment\";\r\nimport { browserHistory } from \"react-router\";\r\n\r\n//import Report from \"./Report\";\r\n\r\nexport default function Reports() {\r\n    //The end of this day, which is midnight, which is when the next report is generated,\r\n    let midnight = moment().endOf(\"day\")\r\n\r\n    const [searchDate, setSearchDate] = useState(\"\")\r\n\r\n    let dates = [\r\n        {date: moment().subtract(0,'d').format('YYYY-MM-DD')},\r\n        {date: moment().subtract(1,'d').format('YYYY-MM-DD')},\r\n        {date: moment().subtract(2,'d').format('YYYY-MM-DD')},\r\n        {date: moment().subtract(3,'d').format('YYYY-MM-DD')},\r\n        {date: moment().subtract(4,'d').format('YYYY-MM-DD')},\r\n        {date: moment().subtract(6,'d').format('YYYY-MM-DD')},\r\n        {date: moment().subtract(7,'d').format('YYYY-MM-DD')},\r\n        {date: moment().subtract(8,'d').format('YYYY-MM-DD')},\r\n        {date: moment().subtract(9,'d').format('YYYY-MM-DD')},\r\n        {date: moment().subtract(10,'d').format('YYYY-MM-DD')},\r\n        {date: moment().subtract(11,'d').format('YYYY-MM-DD')},\r\n        {date: moment().subtract(12,'d').format('YYYY-MM-DD')},\r\n        {date: moment().subtract(13,'d').format('YYYY-MM-DD')},\r\n    ]\r\n\r\n    useEffect(()=> {\r\n        document.title = \"CS261 - Reports\"\r\n    }, [])\r\n\r\n    const changeReportDate = (event) => {\r\n        setSearchDate(event.target.value)\r\n    }\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        if (searchDate === \"\") {\r\n            return\r\n        }\r\n        let dateRE = /(0\\d{1}|1[0-2])\\/([0-2]\\d{1}|3[0-1])\\/(19|20)\\d{2}/\r\n\r\n        if (!searchDate.match(dateRE)) {\r\n            let searchedDate = new Date(searchDate)\r\n            if (searchedDate > new Date()) {\r\n                //Is in the future, we dont want this.\r\n                return\r\n            } else {\r\n                //Valid string\r\n                browserHistory.push(`/report/${searchDate}`)\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n   return (\r\n        <>\r\n        <div className=\"px-4 pb-2 md:px-0 flex flex-wrap justify-between items-center border-b border-gray-300\">\r\n            <div className=\"w-full sm:w-1/2\">\r\n                <h1 className=\"text-brand font-bold text-2xl\">Reports &bull; <br className=\"block sm:hidden\"/>\r\n                <span className=\"text-gray-700 font-normal text-base tracking-tight\"> Next report generated: <strong>{midnight.fromNow()}</strong></span></h1>\r\n                <p>Reports are generated here for the regulator. These reports contain:</p>\r\n            </div>\r\n            <div className=\"flex flex-col mt-4 sm:mt-0 items-start sm:items-end\">\r\n                <p className=\"text-md\">Search for a report by it's date, format is YYYY-MM-DD</p>\r\n                <form onSubmit={submit} className=\"flex mt-2\" action=\"\">\r\n                    <input onChange={changeReportDate} className=\"px-2 py-1 rounded-l\" type=\"text\" placeholder=\"2020-03-18\"/>\r\n                    <button className=\"px-4 py-1 bg-brand hover:bg-indigo-500 text-white rounded-r\" type=\"submit\">Find</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"p-4 sm:p-0 mt-8\">\r\n            <h3 className=\"text-brand text-xl font-bold mb-4\">Recent Reports</h3>\r\n\r\n            <div className=\"grid grid-cols-2 gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n\r\n                    {dates.map((date, index)=> (\r\n                        <div key={index} className=\"w-full flex flex-col items-center p-4 bg-white shadow-md rounded\">\r\n                            <h4 className=\"text-brand font-bold text-lg\">{date.date}</h4>\r\n                            {index === 0 ? <p className=\"mb-4\">Today</p> : <p className=\"mb-4\">{moment(date.date).fromNow()}</p>}\r\n                            {/* <p>Total Trades: 100</p>\r\n                            <div className=\"w-full mt-2 flex justify-around\">\r\n                                <p>Edited Trades: 50</p>\r\n                                <p>Deleted Trades: 30</p>\r\n                            </div>\r\n                            <div className=\"w-full mt-4 flex flex-row justify-around\">\r\n                                <div className=\"flex flex-col\">\r\n                                    <p className=\"text-green-500\">Low Risk</p>\r\n                                    <p className=\"text-center\">20</p>\r\n                                </div>\r\n                                <div className=\"flex flex-col\">\r\n                                    <p className=\"text-yellow-600\">Medium Risk</p>\r\n                                    <p className=\"text-center\">35</p>\r\n                                </div>\r\n                                <div className=\"flex flex-col\">\r\n                                    <p className=\"text-red-600\">High Risk</p>\r\n                                    <p className=\"text-center\">4</p>\r\n                                </div>\r\n                            </div> */}\r\n    \r\n                            <div className=\"mt-4 flex\">\r\n                                <button onClick={()=> browserHistory.push(`/report/${date.date}`)} className=\"bg-brand mr-4 h-10 text-white px-2 py-1 rounded hover:shadow hover:bg-indigo-500\">\r\n                                    Access Report\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n            </div>\r\n        </div>\r\n        \r\n        </>\r\n   );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\nimport PDFDocument from \"./PDFDocument\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router\";\r\n\r\nimport api from \"../../api\"\r\n\r\nexport default function Report(props) {\r\n    let date = moment(props.params.reportDate, \"YYYY-MM-DD\").format(\"dddd, MMMM Do YYYY\")\r\n\r\n    let year = props.params.reportDate.split(\"-\")[0]\r\n    let month = props.params.reportDate.split(\"-\")[1]\r\n    let day = props.params.reportDate.split(\"-\")[2]\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(\"\")\r\n    const [reportData, setReportData] = useState(null)\r\n\r\n    useEffect(()=> {\r\n        document.title = `CS261 - Report: ${year}-${month}-${day}`\r\n        api.get(`/report/year=${year}&month=${month}&day=${day}/`).then(response => {\r\n            if(response.status === 400) {\r\n                setError(\"A report for this date doesnt exist\")\r\n                setLoading(false)\r\n            } else {\r\n                setReportData(response.data)\r\n                setLoading(false)\r\n            }\r\n        }).catch(error => { \r\n            setError(error.message)\r\n            setLoading(false)\r\n            console.log(error)\r\n\r\n        })\r\n    }, [])\r\n\r\n    const prettyifyAttribute = (name) => {\r\n        switch (name) {\r\n            case 'underlying_price':\r\n                return \"Underlying Price\"\r\n            case 'strike_price':\r\n                return \"Strike Price\"\r\n            case 'quantity':\r\n                return \"Quantity\"\r\n            case 'maturity_date':\r\n                return \"Maturity Date\"\r\n        \r\n            default:\r\n                return \"None\"\r\n        }\r\n    }\r\n\r\n    if(error.length > 0) {\r\n        return (\r\n            <>\r\n            <h3 className=\"text-red-700 font-semibold\">Error!</h3>\r\n            <p>{error}</p>\r\n            </>\r\n        );\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n                <div className=\"h-48 w-48 mx-auto spinner text-center\"></div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"p-4\" id=\"report-page\">\r\n                    <div className=\"\">\r\n                        <div className=\"flex flex-col md:flex-row justify-between\">\r\n                            <h2 className=\"text-brand font-bold text-2xl\">{date}</h2>\r\n                            <PDFDownloadLink\r\n                                    document={<PDFDocument data={reportData}/>}\r\n                                    fileName={`report-${year + \"-\" + month + \"-\" + day}.pdf`}\r\n                                    style={{\r\n                                        textDecoration: \"none\",\r\n                                        padding: \"10px\",\r\n                                        borderRadius: \"4px\",\r\n                                        color: \"white\",\r\n                                        backgroundColor: \"#4a5568\"\r\n                                    }}>\r\n                                    {({ blob, url, loading, error }) =>\r\n                                    loading ? \"Loading PDF...\" : \"Download PDF\"\r\n                                    }\r\n                            </PDFDownloadLink>\r\n                        </div>\r\n                        <p className=\"mt-4 md:mt-0\">Trading Summary (Click on a section title to jump to that section)</p>\r\n                        <div className=\"mt-3\">\r\n                            <ul className=\"flex flex-col md:flex-row\">\r\n                                <li className=\"mt-2 mr-6\"><a className=\"px-4 py-1 bg-brand text-white rounded-full\" href=\"#new-trades\">New Trades: <span>{reportData.num_of_new_trades}</span></a></li>\r\n                                <li className=\"mt-2 mr-6\"><a className=\"px-4 py-1 bg-brand text-white rounded-full\" href=\"#edited-trades\">Edited Trades: <span>{reportData.num_of_edited_trades}</span></a></li>\r\n                                <li className=\"mt-2 mr-6\"><a className=\"px-4 py-1 bg-brand text-white rounded-full\" href=\"#deleted-trades\">Deleted Trades: <span>{reportData.num_of_deleted_trades}</span></a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                \r\n    \r\n                    <section className=\"mt-12\" id=\"new-trades\">\r\n                        <h3 className=\"text-brand font-semibold text-lg\">New Trades</h3>\r\n                        <p>Trades created today</p>\r\n                        \r\n                        {reportData.num_of_new_trades > 0 &&\r\n                        <div className=\"mt-3\">\r\n                            <table className=\"table-fixed rounded shadow\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"w-1/12 px-4 py-2\">ID</th>\r\n                                        <th className=\"w-1/12 px-4 py-2\">Buying Party</th>\r\n                                        <th className=\"w-1/12 px-4 py-2\">Selling Party</th>\r\n                                        <th className=\"w-1-12 px-4 py-2\">Product</th>\r\n                                        <th className=\"w-1-12 px-4 py-2\">Quantity</th>\r\n                                        <th className=\"w-1-12 px-4 py-2\">Underlying Price</th>\r\n                                        <th className=\"w-1-12 px-4 py-2\">Strike Price</th>\r\n                                        <th className=\"w-1-12 px-4 py-2\">Currencies <small className=\"text-xs font-normal\">(Underlying) | (Notional)</small></th>\r\n                                        <th className=\"w-1-12 px-4 py-2\">Maturity Date</th>\r\n                                        <th className=\"w-1/12 px-4 py-2\">Created</th>\r\n                                        <th className=\"w-1/12 px-4 py-2\">Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {reportData.created_trades.map((created_trade, index)=> (\r\n                                        <tr className=\"bg-white\" key={index}>\r\n                                            <td className=\"border px-4 py-2 text-center\">{created_trade.id}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{created_trade.buying_party}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{created_trade.selling_party}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{created_trade.product}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{created_trade.underlying_price}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{created_trade.quantity}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{created_trade.strike_price}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{created_trade.underlying_currency} | {created_trade.notional_currency}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{created_trade.maturity_date}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{moment(created_trade.date).fromNow()}</td>\r\n                                            <td className=\"border px-4 py-2\">\r\n                                                <Link className=\"mr-3 px-2 py-1 bg-blue-700 text-white rounded\" to={`/trading/edit-trade/${created_trade.id}`}>Edit</Link>\r\n                                                <Link className=\"ml-3 px-2 py-1 bg-red-700 text-white rounded\" to={`/trading/delete-trade/${created_trade.id}`}>Delete</Link>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        }           \r\n                    </section>\r\n                    \r\n                    <section className=\"mt-12\" id=\"edited-trades\">\r\n                        <h3 className=\"text-brand font-semibold text-lg\">Edited Trades</h3>\r\n                        <p>Trades which the user has edited on this day, with a description of each edit</p>\r\n\r\n                        <div className=\"mt-3\">\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                                {reportData.edited_trades.map((edited_trade, index)=> (\r\n                                    <div className=\"bg-white rounded shadow p-4 mb-3 flex justify-around\" key={index}>\r\n                                        <div className=\"\">\r\n                                            <h5 className=\"text-brand font-bold\">{edited_trade.trade.id}</h5>\r\n                                            <p className=\"mb-2\">Edits: {edited_trade.num_of_edits}</p>\r\n                                            <Link className=\"px-3 py-1 rounded bg-gray-500 text-white\" to={`/trade/${edited_trade.trade.id}`}>View</Link>\r\n                                        </div>\r\n                                        <div className=\"pl-4 border-l-2 border-dashed border-gray-600\">\r\n                                            {edited_trade.edits.map((edit, idx)=> (\r\n                                                <div className=\"mb-2\" key={idx}>\r\n                                                    <p>({idx+1}) {prettyifyAttribute(edit.attribute_edited)}</p>\r\n                                                    <p><span className=\"text-red-600 line-through\">{edit.old_value}</span> ->  <span className=\"text-green-700 font-semibold\">{edit.new_value}</span></p>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n    \r\n                    <section className=\"mt-12\" id=\"deleted-trades\">\r\n                        <h3 className=\"text-brand font-semibold text-lg\">Deleted Trades</h3>\r\n                        <p>Trades which a user has deleted on this daye</p>\r\n\r\n                        {reportData.num_of_deleted_trades > 0 &&\r\n                        <div className=\"mt-3\">\r\n                            <table className=\"table-fixed rounded shadow\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"w-1/12 px-4 py-2\">ID</th>\r\n                                        <th className=\"w-1/12 px-4 py-2\">Buying Party</th>\r\n                                        <th className=\"w-1/12 px-4 py-2\">Selling Party</th>\r\n                                        <th className=\"w-1-12 px-4 py-2\">Product</th>\r\n                                        <th className=\"w-1-12 px-4 py-2\">Quantity</th>\r\n                                        <th className=\"w-1-12 px-4 py-2\">Underlying Price</th>\r\n                                        <th className=\"w-1-12 px-4 py-2\">Strike Price</th>\r\n                                        <th className=\"w-1-12 px-4 py-2\">Currencies <small className=\"text-xs font-normal\">(Underlying) | (Notional)</small></th>\r\n                                        <th className=\"w-1-12 px-4 py-2\">Maturity Date</th>\r\n                                        <th className=\"w-1/12 px-4 py-2\">Created</th>\r\n                                        <th className=\"w-1/12 px-4 py-2\">Deleted At</th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {reportData.deleted_trades.map((deleted_trade, index)=> (\r\n                                        <tr key={index} className=\"bg-white\">\r\n                                            <td className=\"border px-4 py-2 text-center\">{deleted_trade.trade.id}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{deleted_trade.trade.buying_party}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{deleted_trade.trade.selling_party}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{deleted_trade.trade.product}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{deleted_trade.trade.underlying_price}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{deleted_trade.trade.quantity}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{deleted_trade.trade.strike_price}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{deleted_trade.trade.underlying_currency} | {deleted_trade.trade.notional_currency}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{deleted_trade.trade.maturity_date}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{moment(deleted_trade.trade.date).fromNow()}</td>\r\n                                            <td className=\"border px-4 py-2 text-center\">{moment(deleted_trade.deletion[0].deleted_at).fromNow()}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        \r\n                        }\r\n                    </section>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Link } from \"react-router\";\r\nimport api from \"../../api\";\r\n\r\nexport default function Corrections() {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const [data, setData] = useState(null);\r\n\r\n    const prettyifyAttribute = (name) => {\r\n        switch (name) {\r\n            case 'UP':\r\n                return \"Underlying Price\"\r\n            case 'ST':\r\n                return \"Strike Price\"\r\n            case 'QT':\r\n                return \"Quantity\"\r\n            case 'maturity_date':\r\n                return \"Maturity Date\"\r\n        \r\n            default:\r\n                return \"None\"\r\n        }\r\n    }\r\n\r\n    const overwrite = (correctID, tradeID, field) => {\r\n        api.post(`/correction/delete/`, {\"correctionID\": correctID, \"tradeID\": tradeID, \"field_type\": field}).then(response => {\r\n            console.log(response)\r\n            window.location.reload();\r\n        }).catch(error => {\r\n            setError(\"Error overwriting the correction, please refresh.\")\r\n        })\r\n    }\r\n\r\n    const submitCorrection = (event, errorID, type, tradeID) => {\r\n        event.preventDefault();\r\n        console.log(event.target[0].value)\r\n    \r\n        api.post(\"/correction/apply\", {\"tradeID\": tradeID, \"errorID\": errorID, \"field_type\": type, \"new_value\": event.target[0].value}).then(response => {\r\n            console.log(response);\r\n            window.location.reload();\r\n        }).catch(error => {\r\n            console.log(error)\r\n            setError(\"Error when applying new correction to existing error.\")\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(()=> {\r\n        api.get(\"/errorsandcorrections\").then(response => {\r\n            console.log(response);\r\n            setData(response.data.errors_and_corrections)\r\n            setLoading(false);\r\n        }).catch(error=> {\r\n            console.log(error);\r\n            setError(error.message)\r\n            setLoading(false);\r\n        })\r\n    }, [])\r\n\r\n    if(error.length > 0) {\r\n        return (\r\n            <>\r\n            <h3 className=\"text-red-700 font-semibold\">Error!</h3>\r\n            <p>{error}</p>\r\n            </>\r\n        );\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"h-48 w-48 mx-auto spinner text-center\"></div>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n            <div className=\"px-4 md:px-0\">\r\n            <h1 className=\"text-brand font-bold text-2xl\">Erroneous Trades and Corrections</h1>\r\n            <p>A page to see the latest erroneous trade findings and apply corrections / overwrite system applied corrections</p>\r\n            <div className=\"flex flex-col mt-4\">\r\n                <div className=\"flex mb-2\">\r\n                    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"exclamation-circle\" className=\"text-red-700 mt-1 w-4 h-4 fill-current svg-inline--fa fa-exclamation-circle fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"></path></svg>\r\n                    <p className=\"ml-2\">Uncorrected error in the trade</p>\r\n                </div>\r\n                <div className=\"flex\">\r\n                    <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"check-circle\" className=\"text-green-700 mt-1 w-4 h-4 fill-current svg-inline--fa fa-check-circle fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z\"></path></svg>\r\n                    <p className=\"ml-2\">Corrected error in trade, either corrected by user or the system automatically</p>\r\n                </div>\r\n            </div>\r\n\r\n            <section className=\"mt-12\">\r\n                {data.length === 0 && <p>No errors and corrections were found.</p> }\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    {data.map((trade, idx) => (\r\n                        <div key={idx} className=\"p-4 bg-white rounded shadow flex\">\r\n                            <div className=\"\">\r\n                                <div className=\"mb-2\">\r\n                                    <p>Trade ID</p>\r\n                                    <h4 className=\"text-brand font-bold\">{trade.id}</h4>\r\n                                </div>\r\n                                <p className=\"text-xs md:text-sm\">Errors: {trade.errors.length}</p>\r\n                                <p className=\"mb-2 text-xs md:text-sm\">Corrections: {trade.correction_count}</p>\r\n                                <Link className=\"px-2 py-1 rounded bg-gray-500 text-white text-xs md:text-sm\" to={`/trade/${trade.id}`}>View Trade</Link>\r\n                                {/* <button className=\"mt-2 px-2 py-1 rounded bg-blue-600 text-white\">Ignore errors</button> */}\r\n                            </div>\r\n\r\n                            <div className=\"ml-8 pl-4 border-l-2 border-dashed border-gray-600\">\r\n                                {trade.errors.map((error, eidx)=> (\r\n                                    <div key={eidx} className=\"mb-3\">\r\n                                        {/* Error found */}\r\n                                        <div className=\"flex mb-2\">\r\n                                            <div className=\"text-green-700\">\r\n                                                {error.correction === \"null\" ?\r\n                                                <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"exclamation-circle\" className=\"text-red-700 mt-1 w-4 h-4 fill-current svg-inline--fa fa-exclamation-circle fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"></path></svg>\r\n                                                :\r\n                                                <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"check-circle\" className=\"text-green-700 mt-1 w-4 h-4 fill-current svg-inline--fa fa-check-circle fa-w-16\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\" d=\"M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z\"></path></svg>\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"ml-3\">\r\n                                                <p className=\"font-semibold\">({eidx + 1}) {prettyifyAttribute(error.erroneous_attribute)}</p>\r\n                                                <p><span className=\"text-red-600\">{error.erroneous_value}</span></p>\r\n\r\n                                                {error.correction === \"null\" ?\r\n                                                    <form onSubmit={(event, id)=> submitCorrection(event, error.id, error.erroneous_attribute, trade.id)} action=\"\" className=\"mt-1 flex\">\r\n                                                        <input className=\"w-12 h-6 px-1 py-1 border border-gray-600 rounded rounded-r-none\" type=\"text\" />\r\n                                                        <input className=\"px-1 rounded rounded-l-none text-white bg-blue-600 font-normal text-xs\" type=\"submit\" value=\"Apply Correction\"/>\r\n                                                    </form>\r\n                                                    : \"\"\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {error.correction !== \"null\" &&\r\n                                            <div className=\"flex\">\r\n                                                <div className=\"text-green-700 w-4\">\r\n                                                </div>\r\n                                                <div className=\"ml-3\">\r\n                                                    <p>{error.correction.change_type === \"USER\" ? \"User Correction\" : \"System Correction\"}</p>\r\n                                                    <p className=\"mb-1\"><span className=\"text-red-600 line-through\">{error.correction.old_value}</span> ->  <span className=\"text-green-700 font-semibold\">{error.correction.new_value}</span></p>\r\n                                                    <button onClick={()=> overwrite(error.correction.id, trade.id, error.erroneous_attribute)} className=\"border border-red-700 px-1 py-1 text-xs rounded\">Remove Correction</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        }\r\n\r\n                                        <div className=\"mb-1 pb-2 flex border-b border-dashed border-gray-600\">\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n            </section>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Link, browserHistory } from \"react-router\";\r\n\r\nexport default function FourOFour() {\r\n    return (\r\n        <div className=\"text-center mt-12 lg:mt-40\">\r\n            <h1 className=\"text-brand font-bold text-4xl\">This page doesn't exist</h1>\r\n            <p className=\"text-gray-800 text-xl\">You should go back to the home page or return to where you came from</p>\r\n            \r\n            <div className=\"mt-8 flex justify-center\">\r\n                <Link className=\"block p-2 w-40 bg-brand rounded-lg shadow-lg font-bold text-white uppercase tracking-normal hover:shadow-2xl hover:bg-blue-600\" to=\"/\">Go Home</Link>\r\n                <button className=\"block p-2 ml-4 w-40 text-white bg-gray-700 font-bold uppercase rounded-lg shadow-lg hover:bg-gray-600 hover:shadow-2xl\" onClick={()=> browserHistory.goBack()}>Go back</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"sourceRoot":""}